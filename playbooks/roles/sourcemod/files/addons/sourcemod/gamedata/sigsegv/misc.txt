// miscellaneous

"Games"
{
	"#default"
	{
		"#supported"
		{
			engine "tf2"
			engine "css"
			engine "ep1"
			engine "ep2"
			engine "hl2dm"
			engine "dods"
			engine "sdk2013"
			engine "l4d"
			engine "nd"
			engine "l4d2"
			engine "blade"
			engine "insurgency"
			engine "contagion"
			engine "bms"
			engine "doi"
			engine "pkvii"
		}
		
		"sigsegv"
		{
			"addrs"
			{
				"IBaseProjectileAutoList::m_IBaseProjectileAutoListAutoList"
				{
					type "sym"
					sym  "_ZN23IBaseProjectileAutoList33m_IBaseProjectileAutoListAutoListE"
				}
				
				"CalcDistanceToLineSegment"
				{
					type "sym"
					sym  "_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf"
				}
				
				"CreateEntityByName"
				{
					type   "func ebpprologue unistr"
					sym    "_Z18CreateEntityByNamePKci"
					unistr "CreateEntityByName( %s, %d ) - CreateEdict failed."
				}
				
				"TranslateWeaponEntForClass"
				{
					type   "func ebpprologue uniref"
					sym    "_Z26TranslateWeaponEntForClassPKci"
					uniref "pszWpnEntTranslationList"
				}

				"CBaseEntity::DispatchTraceAttack"
				{
					type "fixed"
					sym  "_ZN11CBaseEntity19DispatchTraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"
					addr  "0x18c830"
					build "3277805"
				}
				
				"CTFGameRules::PushAllPlayersAway"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18PushAllPlayersAwayERK6VectorffiP10CUtlVectorIP9CTFPlayer10CUtlMemoryIS5_iEE"
				}
				
				"CTFWeaponBase::DeflectProjectiles"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN13CTFWeaponBase18DeflectProjectilesEv"
					unistr "victim:0"
				}
				
				"CTFMinigun::AttackEnemyProjectiles"
				{
					type "sym"
					sym  "_ZN10CTFMinigun22AttackEnemyProjectilesEv"
				}
				
				"CTFSniperRifle::ExplosiveHeadShot"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle17ExplosiveHeadShotEP9CTFPlayerS1_"
				}
				"CTFSniperRifle::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle13ItemPostFrameEv"
				}
				"CTFSniperRifle::GetPenetrateType"
				{
					type  "fixed"
					sym   "_ZNK14CTFSniperRifle16GetPenetrateTypeEv"
					addr  "0x59e1e0"
					build "3277805"
				}
				
				"CTFSniperRifleClassic::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN21CTFSniperRifleClassic13ItemPostFrameEv"
				}
				
				"CTFKnife::PrimaryAttack"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN8CTFKnife13PrimaryAttackEv"
					unistr "DisguiseOnKill"
				}
				
				"CCurrencyPack::ComeToRest"
				{
					type      "func datamap vthunk"
					sym       "_ZN13CCurrencyPack10ComeToRestEv"
				//	classname "item_currencypack_custom"
					datamap   "CItem::m_DataMap"
					func      "CItemComeToRest"
					vtable    ".?AVCCurrencyPack@@"
				}
				"CCurrencyPack::MyTouch"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack7MyTouchEP11CBasePlayer"
				}
				
				"CFuncNavCost::IsApplicableTo"
				{
					type   "func ebpprologue unistr"
					sym    "_ZNK12CFuncNavCost14IsApplicableToEP20CBaseCombatCharacter"
					unistr "mission_sniper"
					// alt: "mission_spy"
					// alt: "mission_sentry_buster"
				}
				
				"CTFReviveMarker::Create"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker6CreateEP9CTFPlayer"
					addr  "0x4b9d50"
					build "3271684"
				}
				"CTFReviveMarker::AddMarkerHealth"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker15AddMarkerHealthEf"
					addr  "0x4b9b90"
					build "3271684"
				}
				"CTFReviveMarker::ReviveThink"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker11ReviveThinkEv"
					addr  "0x4ba390"
					build "3271684"
				}
				
				"CTFBonesaw::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK10CTFBonesaw11GetWeaponIDEv"
				}
				
				"CBulletPenetrateEnum::EnumEntity"
				{
					type   "func knownvtidx"
					sym    "_ZN20CBulletPenetrateEnum10EnumEntityEP13IHandleEntity"
					vtable ".?AVCBulletPenetrateEnum@@"
					idx    "0x00"
				}
				
				"CTFBat_Giftwrap::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK15CTFBat_Giftwrap11GetWeaponIDEv"
				}
				
				"CAttributeManager::AttribHookValue<int>"
				{
					type "pattern"
					sym  "_ZN17CAttributeManager15AttribHookValueIiEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
					seg  "text"
					seek "558bec83ec248b0d8cc26a105333db895ddc895de08b4108895df0895df45785c0743e6894106f1068b8106f106890806c10683c1e92106a7768c8106f10535353538d4ddc5150"
					mask "ffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000ff00000000ff00000000ff00000000ffffff00000000ffffffffffffffffff"
				}
				"CAttributeManager::AttribHookValue<float>"
				{
					type "pattern"
					sym  "_ZN17CAttributeManager15AttribHookValueIfEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
					seg  "text"
					
					seek "558bec83ec288b0d8cc26a105333db895dd8895ddc8b4108895dec895df05685c0743e6894106f1068b8106f106890806c1068481e92106a7768c8106f10535353538d4dd85150"
					mask "ffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000ff00000000ff00000000ff00000000ffffff00000000ffffffffffffffffff"
				}
				"CAttributeManager::ApplyAttributeFloatWrapper"
				{
					type "sym"
					sym  "_ZN17CAttributeManager26ApplyAttributeFloatWrapperEfP11CBaseEntity8string_tP10CUtlVectorIS1_10CUtlMemoryIS1_iEE"
				}
				
				"CBaseServer::BroadcastMessage1"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessagebb"
					lib  "engine"
				}
				"CBaseServer::BroadcastMessage2"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessageR16IRecipientFilter"
					lib  "engine"
				}
				
				"SVC_UserMessage::WriteToBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage13WriteToBufferER8bf_write"
					addr  "0x1da230"
					build "3283568"
					lib   "engine"
				}
				"SVC_UserMessage::ReadFromBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage14ReadFromBufferER7bf_read"
					addr  "0x1d5920"
					build "3283568"
					lib   "engine"
				}
				
				"CMannVsMachineStats::SendUpgradesToPlayer"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20SendUpgradesToPlayerEP9CTFPlayerP10CUtlVectorI12CUpgradeInfo10CUtlMemoryIS3_iEE"
				}
				
				"EvaluateConditional"
				{
					type "sym"
					sym  "_Z19EvaluateConditionalPKc"
				}
				
				"UTIL_GetListenServerHost"
				{
					type "sym"
					sym  "_Z24UTIL_GetListenServerHostv"
				}
				
				"CStdMemAlloc::Alloc"
				{
					type   "func knownvtidx"
					sym    "_ZN12CStdMemAlloc5AllocEj"
					vtable ".?AVCStdMemAlloc@@"
					idx    "0x01"
					lib    "tier0"
				}
				
				"[engine] CUtlBuffer::EnsureCapacity"
				{
					type  "fixed"
					sym   "_ZN10CUtlBuffer14EnsureCapacityEi"
					addr  "0x251b60"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_read::bf_read"
				{
					type  "fixed"
					sym   "_ZN7bf_readC1EPKcPKvii"
					addr  "0x253610"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_write::bf_write"
				{
					type  "fixed"
					sym   "_ZN8bf_writeC1EPvii"
					addr  "0x253690"
					build "3283568"
					lib   "engine"
				}
				
				"CDemoPlayer::ReadPacket"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN11CDemoPlayer10ReadPacketEv"
					unistr "Tried to read a demo message with no demo file\n"
					lib    "engine"
				}
				"CHLTVServer::ReadCompeleteDemoFile"
				{
					type  "fixed"
					sym   "_ZN11CHLTVServer21ReadCompeleteDemoFileEv"
					addr  "0x19c2b0"
					build "3283568"
					lib   "engine"
				}
				"CDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN13CDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CHLTVDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN17CHLTVDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCHLTVDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CReplayDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN19CReplayDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCReplayDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				
				"CTFGameRules::PlayerKilled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
				}
				"CTFGameRules::ShouldDropSpellPickup"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21ShouldDropSpellPickupEv"
				}
				"CTFGameRules::DropSpellPickup"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules15DropSpellPickupERK6Vectori"
				}
				"CTFGameRules::IsUsingSpells"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules13IsUsingSpellsEv"
				}
				
				"KeyValues::LoadFromFile"
				{
					type "sym"
					sym  "_ZN9KeyValues12LoadFromFileEP15IBaseFileSystemPKcS3_b"
				}
				"KeyValues::MergeBaseKeys"
				{
					type "sym"
					sym  "_ZN9KeyValues13MergeBaseKeysER10CUtlVectorIPS_10CUtlMemoryIS1_iEE"
				}
				
				"CBasePlayer::EyeVectors"
				{
					type  "fixed"
					sym   "_ZN11CBasePlayer10EyeVectorsEP6VectorS1_S1_"
					addr  "0x19ac90"
					build "3283568"
				}
				
				"CUserMessages::LookupUserMessage"
				{
					type "sym"
					sym  "_ZN13CUserMessages17LookupUserMessageEPKc"
				}
				"CUserMessages::Register"
				{
					type "sym"
					sym  "_ZN13CUserMessages8RegisterEPKci"
				}
				
				"clear_debug_overlays"
				{
					type "sym"
					sym  "_ZL20clear_debug_overlaysRK8CCommand"
				}
				
				"ConColorMsg"
				{
					type "sym"
					sym  "_Z11ConColorMsgRK5ColorPKcz"
					lib  "tier0"
				}
				
				"CTFPowerupBottle::ReapplyProvision"
				{
					type "sym"
					sym  "_ZN16CTFPowerupBottle16ReapplyProvisionEv"
				}
				
				"CTFGameRules::RadiusDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12RadiusDamageER19CTFRadiusDamageInfo"
				}
				"CEntitySphereQuery::CEntitySphereQuery [C1]"
				{
					type "sym"
					sym  "_ZN18CEntitySphereQueryC1ERK6Vectorfi"
				}
				"CTFRadiusDamageInfo::ApplyToEntity"
				{
					type "sym"
					sym  "_ZN19CTFRadiusDamageInfo13ApplyToEntityEP11CBaseEntity"
				}
				
				"CObjectDispenser::DispenseThink"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser13DispenseThinkEv"
				}
				"CObjectDispenser::GetDispenserRadius"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser18GetDispenserRadiusEv"
				}
				
				"CBaseObject::StartPlacement"
				{
					type "sym"
					sym  "_ZN11CBaseObject14StartPlacementEP9CTFPlayer"
				}
				"CBaseObject::StartBuilding"
				{
					type "sym"
					sym  "_ZN11CBaseObject13StartBuildingEP11CBaseEntity"
				}
				
				"CTFWeaponBuilder::StartBuilding"
				{
					type "sym"
					sym  "_ZN16CTFWeaponBuilder13StartBuildingEv"
				}
				
				"CEconItemView::GetItemDefIndex"
				{
					type "sym"
					sym  "_ZNK13CEconItemView15GetItemDefIndexEv"
				}
				
				"CObjectSentrygun::GetTurretAngles"
				{
					type "sym"
					sym  "_ZNK16CObjectSentrygun15GetTurretAnglesEv"
				}
				"CObjectDispenser::GetAvailableMetal"
				{
					type "sym"
					sym  "_ZNK16CObjectDispenser17GetAvailableMetalEv"
				}
				
				"CMultiplayRules::VoiceCommand"
				{
					type "sym"
					sym  "_ZN15CMultiplayRules12VoiceCommandEP22CBaseMultiplayerPlayerii"
				}
				
				"CTFBotHintEngineerNest::HintTeleporterThink"
				{
					type "sym"
					sym  "_ZN22CTFBotHintEngineerNest19HintTeleporterThinkEv"
				}
				
				"ITFBotHintEntityAutoList::m_ITFBotHintEntityAutoListAutoList"
				{
					type "sym"
					sym  "_ZN24ITFBotHintEntityAutoList34m_ITFBotHintEntityAutoListAutoListE"
				}
				
				"ICaptureFlagAutoList::m_ICaptureFlagAutoListAutoList"
				{
					type "sym"
					sym  "_ZN20ICaptureFlagAutoList30m_ICaptureFlagAutoListAutoListE"
				}
				
				"UTIL_EntitiesInSphere"
				{
					type "sym"
					sym  "_Z21UTIL_EntitiesInSphereRK6VectorfP20CFlaggedEntitiesEnum"
				}
				"CTFProjectile_Jar::Explode"
				{
					type "sym"
					sym  "_ZN17CTFProjectile_Jar7ExplodeEP10CGameTracei"
				}
				"CBaseProjectile::GetProjectileType"
				{
					type "sym"
					sym  "_ZNK15CBaseProjectile17GetProjectileTypeEv"
				}
				"CTFWeaponBaseGrenadeProj::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK24CTFWeaponBaseGrenadeProj11GetWeaponIDEv"
				}
				
				"CTFWeaponBaseGrenadeProj::Explode"
				{
					type "sym"
					sym  "_ZN24CTFWeaponBaseGrenadeProj7ExplodeEP10CGameTracei"
				}
				
				"CTFPipebombLauncher::DetonateRemotePipebombs"
				{
					type "sym"
					sym  "_ZN19CTFPipebombLauncher23DetonateRemotePipebombsEb"
				}
				
				"DispatchParticleEffect [overload 1]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_b"
				}
				"DispatchParticleEffect [overload 2]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityib"
				}
				"DispatchParticleEffect [overload 3]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 4]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6VectorS1_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 5]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffecti6VectorS_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 6]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_6VectorS4_bb"
				}
				"DispatchParticleEffect [overload 7]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleS1_S1_bP11CBaseEntityi"
				}
				"StopParticleEffects"
				{
					type "sym"
					sym  "_Z19StopParticleEffectsP11CBaseEntity"
				}
				
				"IGameSystem::Add"
				{
					type  "pattern"
					sym   "_ZN11IGameSystem3AddEPS_"
					seg   "text"
					seek  "558bec518b1514d58b108b0d0cd58b10568bf28d42013bc17e142bd1b908d58b104252e8d89c1c008b1514d58b10a108d58b1042891514d58b102bd64aa318d58b1085d27e1d8d0cb08d04950000000050518d410450e8055b4200a108d58b1083c40c8d04b08b750885c0740289306a0068b0de8f1068c4dd8f106a0056e81170420083c41485c074118d45fc8975fc50b91cd58b10e835981c005e8be55dc3"
					mask  "ffffffffffff00000000ffff00000000ffffffffffffffffff00ffffff00000000ffffff00000000ffff00000000ff00000000ffffff00000000ffffffff00000000ffffff00ffffffffffffffffffffffffffffffffff00000000ff00000000ffffffffffffffffffffffff00ffffffffff00000000ff00000000ffffffff00000000ffffffffffff00ffffffffffffffff00000000ff00000000ffffffffff"
				}
				"IGameSystem::Remove"
				{
					type "pattern"
					sym  "_ZN11IGameSystem6RemoveEPS_"
					seg  "text"
					seek "558bec51568d4508b9b8148c1050e81dbb0a008b75086a00689020901068a41f90106a0056e84aed420083c41485c074118d45fc8975fc50b9cc148c10e8eeba0a005e8be55dc3"
					mask "ffffffffffffffffff00000000ffff00000000ffffffffffff00000000ff00000000ffffffff00000000ffffffffffffffffffffffffffffff00000000ff00000000ffffffffff"
				//	seek "558bec51568bf18d45fc50b908d58b108975fcc706387a6d10e8a29708006a0068b0de8f1068c4dd8f106a0056e8f271420083c41485c074118d45fc8975fc50b91cd58b10e8769708005e8be55dc3"
				//	mask "ffffffffffffffffffffffff00000000ffffffffff00000000ff00000000ffffff00000000ff00000000ffffffff00000000ffffffffffff00ffffffffffffffff00000000ff00000000ffffffffff"
				}
				
				"CTFBaseProjectile::FlyThink"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile8FlyThinkEv"
				}
				
				"net_blocksize"
				{
					type "sym"
					sym  "net_blocksize"
					lib  "engine"
				}
				"net_maxroutable"
				{
					type "sym"
					sym  "net_maxroutable"
					lib  "engine"
				}
				"sv_maxroutable"
				{
					type "sym"
					sym  "_ZL14sv_maxroutable"
					lib  "engine"
				}
				"NET_SendPacket"
				{
					type "sym"
					sym  "_Z14NET_SendPacketP11INetChanneliRK8netadr_sPKhiP8bf_writeb"
					lib  "engine"
				}
				"NET_SendLong"
				{
					type "sym"
					sym  "_Z12NET_SendLongP11INetChanneliiPKciPK8sockaddrii"
					lib  "engine"
				}
				"NET_SendTo"
				{
					type "sym"
					sym  "_Z10NET_SendTobiPKciPK8sockaddrii"
					lib  "engine"
				}
				"CNetChan::GetMaxRoutablePayloadSize"
				{
					type "sym"
					sym  "_ZN8CNetChan25GetMaxRoutablePayloadSizeEv"
					lib  "engine"
				}
				
				"WeaponID_IsSniperRifle"
				{
					type "sym"
					sym  "_Z22WeaponID_IsSniperRiflei"
				}
				"WeaponID_IsSniperRifleOrBow"
				{
					type "sym"
					sym  "_Z27WeaponID_IsSniperRifleOrBowi"
				}
				
				"CTFKnife::GetMeleeDamage"
				{
					type "sym"
					sym  "_ZN8CTFKnife14GetMeleeDamageEP11CBaseEntityPiS2_"
				}
				
				"CObjectSapper::Spawn"
				{
					type "sym"
					sym  "_ZN13CObjectSapper5SpawnEv"
				}
				
				"CTFGameRules::ApplyOnDamageAliveModifyRules"
				{
					type "sym"
					sym  "_ZN12CTFGameRules29ApplyOnDamageAliveModifyRulesERK15CTakeDamageInfoP11CBaseEntityRNS_20DamageModifyExtras_tE"
				}
				
				"NextBotTraversableTraceFilter::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN29NextBotTraversableTraceFilter15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"CUpgrades::GetUpgradeAttributeName"
				{
					type "sym"
					sym  "_ZNK9CUpgrades23GetUpgradeAttributeNameEi"
				}
				"CUpgrades::GrantOrRemoveAllUpgrades"
				{
					type "sym"
					sym  "_ZN9CUpgrades24GrantOrRemoveAllUpgradesEP9CTFPlayerbb"
				}
				"GetItemSchema"
				{
					type "sym"
					sym  "_Z13GetItemSchemav"
				}
				
				"CEconItemSchema::GetItemDefinition"
				{
					type "sym"
					sym  "_ZNK15CEconItemSchema17GetItemDefinitionEi"
				}
				"CEconItemSchema::GetItemDefinitionByName"
				{
					type "sym"
					sym  "_ZNK15CEconItemSchema23GetItemDefinitionByNameEPKc"
				}
				"CEconItemSchema::GetItemDefinitionByName2"
				{
					type "sym"
					sym  "_ZN15CEconItemSchema23GetItemDefinitionByNameEPKc"
				}
				"CEconItemSchema::GetAttributeDefinition"
				{
					type "sym"
					sym  "_ZNK15CEconItemSchema22GetAttributeDefinitionEi"
				}
				"CEconItemSchema::GetAttributeDefinitionByName"
				{
					type "sym"
					sym  "_ZNK15CEconItemSchema28GetAttributeDefinitionByNameEPKc"
				}
				
				"CTFGameRules::CanUpgradeWithAttrib"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20CanUpgradeWithAttribEP9CTFPlayeritP22CMannVsMachineUpgrades"
				}
				"CTFGameRules::GetCostForUpgrade"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17GetCostForUpgradeEP22CMannVsMachineUpgradesiiP9CTFPlayer"
				}
				"CTFGameRules::GetUpgradeTier"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14GetUpgradeTierEi"
				}
				"CTFGameRules::IsUpgradeTierEnabled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20IsUpgradeTierEnabledEP9CTFPlayerii"
				}
				
				"CMannVsMachineStats::GetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetUpgradeSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBottleSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats17GetBottleSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBuyBackSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetBuyBackSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::ResetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20ResetUpgradeSpendingEP9CTFPlayer"
				}
				
				"CGameRules::GetViewVectors"
				{
					type "sym"
					sym  "_ZNK10CGameRules14GetViewVectorsEv"
				}
				
				"ICurrencyPackAutoList::m_ICurrencyPackAutoListAutoList"
				{
					type "sym"
					sym  "_ZN21ICurrencyPackAutoList31m_ICurrencyPackAutoListAutoListE"
				}
				
				"CTFPowerup::GetLifeTime"
				{
					type "sym"
					sym  "_ZN10CTFPowerup11GetLifeTimeEv"
				}
				
				"CCurrencyPack::SetAmount"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack9SetAmountEf"
				}
				
				
				"CTFTankBoss::TankBossThink"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss13TankBossThinkEv"
				}
				"CTFTankBoss::Event_Killed"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss12Event_KilledERK15CTakeDamageInfo"
				}
				
				"CPathTrack::GetNext"
				{
					type "sym"
					sym  "_ZN10CPathTrack7GetNextEv"
				}
				
				"CTFTankBoss::GetBodyInterface"
				{
					type "sym"
					sym  "_ZNK11CTFTankBoss16GetBodyInterfaceEv"
				}
				
				"CTFGrenadePipebombProjectile::Create"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfoif"
				}
				
				"CFuncNavCost::HasTag"
				{
					type "sym"
					sym  "_ZNK12CFuncNavCost6HasTagEPKc"
				}
				
				"ICaptureZoneAutoList::m_ICaptureZoneAutoListAutoList"
				{
					type "sym"
					sym  "_ZN20ICaptureZoneAutoList30m_ICaptureZoneAutoListAutoListE"
				}
				
				"CTraceFilterSimple::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimple15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"CTFFlameEntity::FlameThink"
				{
					type    "func ebpprologue vprof"
					sym     "_ZN14CTFFlameEntity10FlameThinkEv"
					v_name  "CTFFlameEntity::FlameThink"
					v_group "%s Collision"
				}
				
				"CTFWeaponBaseMelee::GetSwingRange"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee13GetSwingRangeEv"
				}
				
				"SendProxy_UInt8ToInt32"
				{
					type "sym"
					sym  "_Z22SendProxy_UInt8ToInt32PK8SendPropPKvS3_P8DVariantii"
				}
				
				"CBaseAnimating::LookupSequence"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating14LookupSequenceEPKc"
				}
				
				"CTFTankDestruction::Spawn"
				{
					type "sym"
					sym  "_ZN18CTFTankDestruction5SpawnEv"
				}
				
				"CTFGameRules::PlayerReadyStatus_UpdatePlayerState"
				{
					type "sym"
					sym  "_ZN12CTFGameRules35PlayerReadyStatus_UpdatePlayerStateEP9CTFPlayerb"
				}
				"CTFGameRules::PlayerReadyStatus_HaveMinPlayersToEnable"
				{
					type "sym"
					sym  "_ZN12CTFGameRules40PlayerReadyStatus_HaveMinPlayersToEnableEv"
				}
				
				"CTFGameRules::ClientDisconnected"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18ClientDisconnectedEP7edict_t"
				}
				
				"CTeamControlPointMaster::PointLastContestedAt"
				{
					type "sym"
					sym  "_ZN23CTeamControlPointMaster20PointLastContestedAtEi"
				}
				
//				"CTeamplayRoundBasedRules::GetAllPlayersLobbyInfo"
//				{
//					type "sym"
//					sym  "_ZN24CTeamplayRoundBasedRules22GetAllPlayersLobbyInfoER10CUtlVectorI17LobbyPlayerInfo_t10CUtlMemoryIS1_iEEb"
//				}
				
				"CMannVsMachineStats::RoundEvent_WaveEnd"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18RoundEvent_WaveEndEb"
				}
				
				"CBaseAnimating::DrawServerHitboxes"
				{
					type "pattern"
					sym  "_ZN14CBaseAnimating18DrawServerHitboxesEfb"
					seg  "text"
					seek "558bec83ec44578bf980bf41030000000f859301000083bf6c040000007510e84c4c020085c074078bcfe8e1260000"
					mask "ffffffffffffffffffffff0000ffffffffff00000000ffff0000ffffffffffff00000000ffffffffffffff00000000"
				}
				
//				"CRConClient::SendCmd"
//				{
//					type "pattern"
//					sym  "_ZN11CRConClient7SendCmdEPKc"
//					seg  "text"
//					seek "558bec83ec30538bd956578d4b34e8dd86fdff85c07f336a018d7b5c578d4b34e84baf070085c079216a008bcf"
//					mask "ffffffffffffffffffffffffffffff00000000ffffff00ffffffffffffffffffff00000000ffffff00ffffffff"
//					lib  "engine"
//				}
				
				"CRConClient::SendResponse"
				{
					type "pattern"
					sym  "_ZN11CRConClient12SendResponseER10CUtlBufferb"
					seg  "text"
					seek "558bec807d0c00538bd9742f807b70007529e819e9ffff8d4b34e8118dfdff85c07e5c8b45088d8ba4000000ff701cff30e8ba0019005b5dc20800"
					mask "ffffffffffffffffffffff00ffffffffff00ff00000000ffffffff00000000ffffff00ffffffffffffffffffffffffffffff00000000ffffffffff"
					lib  "engine"
				}
				"CRConClient::BuildResponse"
				{
					type "pattern"
					sym  "_ZN11CRConClient13BuildResponseER10CUtlBuffer23ServerDataRequestType_tPKcS4_"
					seg  "text"
					seek "558bec568b7508578bf96a00f646150175098bcee867f31100eb0e682c652f1056e84a15190083c40c"
					mask "ffffffffffffffffffffffffffffffffff00ffffff00000000ff00ff00000000ffff00000000ffffff"
					lib  "engine"
				}
				
				"CServerRemoteAccess::SendVProfData"
				{
					type "sym"
					sym  "_ZN19CServerRemoteAccess13SendVProfDataEjbPvi"
					lib  "engine"
				}
				
				"WriteRemoteVProfData"
				{
					type "sym"
					sym  "_Z20WriteRemoteVProfDatav"
					lib  "engine"
				}
				
				"CTFWeaponBaseMelee::DoSwingTraceInternal"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee20DoSwingTraceInternalER10CGameTracebP10CUtlVectorIS0_10CUtlMemoryIS0_iEE"
				}
				
				"CVProfRecorder::Record_WriteTimings_R"
				{
					type "sym"
					sym  "_ZN14CVProfRecorder21Record_WriteTimings_REPK10CVProfNode"
					lib  "engine"
				}
				
				"CVProfNode::MarkFrame"
				{
					type "sym"
					sym  "_ZN10CVProfNode9MarkFrameEv"
					lib  "tier0"
				}
				
				"VProfRecord_Snapshot"
				{
					type "pattern"
					sym  "_Z20VProfRecord_Snapshotv"
					seg  "text"
					seek "a19cf3651083f801750ab9a0d96510e9dcfaffff83f8027517803dc4f3651000750e6a006affb9a0d96510e8c0f1ffffc3"
					mask "ff00000000ffffffffffff00000000ff00000000ffffffffffffff00000000ffffffffffffffff00000000ff00000000ff"
					lib  "engine"
				}
				
				"VProfRecord_StartOrStop"
				{
					type "pattern"
					sym  "_Z23VProfRecord_StartOrStopv"
					seg  "text"
					seek "803d04913c100074288b0d60052f10ff810c10000083b90c10000001750c81c118100000ff1544062f10c60504913c1000803d05913c100074218b0d60052f10ff890c100000750c81c118100000ff1540062f10c60505913c1000c3"
					mask "ffff00000000ffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffff00000000ffff00000000ffffff00000000ffffffffff00000000ffffffffffffffffffffffffffffffff00000000ffff00000000ffff"
					lib  "engine"
					
					// WARNING:
					// the windows pattern is actually for VProfExport_StartOrStop
					
					// also, this is broken after the Feb 2017 toolchain update
					// (why the hell is VProfRecord_StartOrStop in two noncontiguous chunks in the win build? WHY?)
				}
				
				"CTFGameMovement::ProcessMovement"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15ProcessMovementEP11CBasePlayerP9CMoveData"
				}
				
				"CUtlConstStringBase<char>::Set"
				{
					type "sym"
					sym  "_ZN19CUtlConstStringBaseIcE3SetEPKc"
				}
				
//				"GlobalAttrModifier_TFHalloweenAttribHookMunger"
//				{
//					type   "func ebpprologue unistr"
//					sym    "_ZL46GlobalAttrModifier_TFHalloweenAttribHookMungerPKcP19CUtlConstStringBaseIcE"
//					unistr "%s__halloween"
//				}
				
//				"GlobalAttrModifier_MvMAttribHookMunger"
//				{
//					type   "func ebpprologue unistr"
//					sym    "_ZL38GlobalAttrModifier_MvMAttribHookMungerPKcP19CUtlConstStringBaseIcE"
//					unistr "%s__mvm"
//				}
				
				"V_vsnprintfRet"
				{
					type "pattern"
					sym  "_Z14V_vsnprintfRetPciPKcS_Pb"
					seg  "text"
					seek "558bec568b750c57ff75148b7d08ff75105657e8003601008b551883c41085d2741385c078083bc67d0433c9eb05b901000000880a85c078043bc67c07c64437ff008bc65f5e5dc3"
					mask "ffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				
				"CBaseAnimating::LookupAttachment"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating16LookupAttachmentEPKc"
				}
				
				"CRecipientFilter::RemoveRecipientsByPVS"
				{
					type "sym"
					sym  "_ZN16CRecipientFilter21RemoveRecipientsByPVSERK6Vector"
				}
				
				"SV_ReplicateConVarChange"
				{
					type "sym"
					sym  "_Z24SV_ReplicateConVarChangePK6ConVarPKc"
					lib  "engine"
				}
				
				"CTFMedigunShield::ShieldTouch"
				{
					type "sym"
					sym  "_ZN16CTFMedigunShield11ShieldTouchEP11CBaseEntity"
				}
				
				"CTraceFilterDeflection::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN22CTraceFilterDeflection15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"ITFFlameEntityAutoList::m_ITFFlameEntityAutoListAutoList"
				{
					type "sym"
					sym  "_ZN22ITFFlameEntityAutoList32m_ITFFlameEntityAutoListAutoListE"
				}
				
				"CTFFlameThrower::GetFlameOriginPos"
				{
					type "sym"
					sym  "_ZN15CTFFlameThrower17GetFlameOriginPosEv"
				}
				
				"CTFFlameThrower::GetDeflectionRadius"
				{
					type "sym"
					sym  "_ZNK15CTFFlameThrower19GetDeflectionRadiusEv"
				}
				
				"CTFFlameEntity::Create"
				{
					type "sym"
					sym  "_ZN14CTFFlameEntity6CreateERK6VectorRK6QAngleP11CBaseEntityfifbb"
				}
				
				"CLagCompensationManager::StartLagCompensation"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager20StartLagCompensationEP11CBasePlayerP8CUserCmd"
				}
				"CLagCompensationManager::FinishLagCompensation"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager21FinishLagCompensationEP11CBasePlayer"
				}
				
				"CTFFlameEntity::RemoveFlame"
				{
					type "sym"
					sym  "_ZN14CTFFlameEntity11RemoveFlameEv"
				}
				
				"CTFFlameEntity::OnCollide"
				{
					type "sym"
					sym  "_ZN14CTFFlameEntity9OnCollideEP11CBaseEntity"
				}
				
				"Physics_RunThinkFunctions"
				{
					type "sym"
					sym  "_Z25Physics_RunThinkFunctionsb"
				}
				
				"Physics_SimulateEntity"
				{
					type "sym"
					sym  "_Z22Physics_SimulateEntityP11CBaseEntity"
				}
				
				"CTFFlameEntity::Spawn"
				{
					type "sym"
					sym  "_ZN14CTFFlameEntity5SpawnEv"
				}
				
				"CBaseProjectile::CollideWithTeammatesThink"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile25CollideWithTeammatesThinkEv"
				}
				
				"CWeaponMedigun::AllowedToHealTarget"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun19AllowedToHealTargetEP11CBaseEntity"
				}
				
				"CObjectTeleporter::RecieveTeleportingPlayer"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter24RecieveTeleportingPlayerEP9CTFPlayer"
				}
				
				"CTFGameRules::CalcDominationAndRevenge"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24CalcDominationAndRevengeEP9CTFPlayerP11CBaseEntityS1_bPi"
				}
				
				"CBaseAnimating::SetModelScale"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating13SetModelScaleEff"
				}
				
				"CNetChan::SendNetMsg"
				{
					type "sym"
					sym  "_ZN8CNetChan10SendNetMsgER11INetMessagebb"
					lib  "engine"
				}
				
				"CBaseFlex::AddSceneEvent"
				{
					type "sym"
					sym  "_ZN9CBaseFlex13AddSceneEventEP12CChoreoSceneP12CChoreoEventP11CBaseEntity"
				}
				
				"FindHullIntersection"
				{
					type "sym"
					sym  "_Z20FindHullIntersectionRK6VectorR10CGameTraceS1_S1_P11CBaseEntity"
				}
				
				"CGameRules::ShouldCollide"
				{
					type "sym"
					sym  "_ZN10CGameRules13ShouldCollideEii"
				}
				
				"PassServerEntityFilter"
				{
					type "sym"
					sym  "_Z22PassServerEntityFilterPK13IHandleEntityS1_"
				}
				
				"StandardFilterRules"
				{
					type "sym"
					sym  "_Z19StandardFilterRulesP13IHandleEntityi"
				}
				
				"IsSpaceToSpawnHere"
				{
					type "sym"
					sym  "_Z18IsSpaceToSpawnHereRK6Vector"
				}
				
				"TeleportNearVictim"
				{
					type "sym"
					sym  "_Z18TeleportNearVictimP6CTFBotP9CTFPlayeri"
				}
				
				"CPackedStore::OpenFile"
				{
					type "sym"
					sym  "_ZN12CPackedStore8OpenFileEPKc"
					lib  "dedicated"
					// it's in dedicated_srv.so on ServerLinux
					// but in filesystem_stdio.* elsewhere
				}
				
				"CBaseFileSystem::FileExists"
				{
					type "sym"
					sym  "_ZN15CBaseFileSystem10FileExistsEPKcS1_"
					lib  "dedicated"
					// it's in dedicated_srv.so on ServerLinux
					// but in filesystem_stdio.* elsewhere
				}
				
				"CTFGameRules::SetNextMvMPopfile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17SetNextMvMPopfileEPKc"
				}
				
				"CTFBaseBoss::UpdateCollisionBounds"
				{
					type "sym"
					sym  "_ZN11CTFBaseBoss21UpdateCollisionBoundsEv"
				}
				
				"CTFGameMovement::CheckStuck"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement10CheckStuckEv"
				}
				
				"CTFMechanicalArm::ShockAttack"
				{
					type "sym"
					sym  "_ZN16CTFMechanicalArm11ShockAttackEv"
				}
				
				"CBaseObject::SetPlasmaDisabled"
				{
					type "sym"
					sym  "_ZN11CBaseObject17SetPlasmaDisabledEf"
				}
				
				"CBaseObject::HasSapper"
				{
					type "sym"
					sym  "_ZN11CBaseObject9HasSapperEv"
				}
				
				"CTFFlameThrower::FireAirBlast"
				{
					type "sym"
					sym  "_ZN15CTFFlameThrower12FireAirBlastEi"
				}
				
				"SetDebugBits"
				{
					type "sym"
					sym  "_Z12SetDebugBitsP11CBasePlayerPKci"
				}
				
				"GetNextCommandEntity"
				{
					type "sym"
					sym  "_Z20GetNextCommandEntityP11CBasePlayerPKcP11CBaseEntity"
				}
				
				"DrawAllDebugOverlays"
				{
					type "sym"
					sym  "_Z20DrawAllDebugOverlaysv"
				}
				
				"CTFGameRules::FPlayerCanTakeDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20FPlayerCanTakeDamageEP11CBasePlayerP11CBaseEntityRK15CTakeDamageInfo"
				}
				
				"CTFGameRules::GetCurrentMatchGroup"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules20GetCurrentMatchGroupEv"
				}
				
				"CTFSniperRifleDecap::GetCount"
				{
					type "sym"
					sym  "_ZN19CTFSniperRifleDecap8GetCountEv"
				}
				
				"CTFSniperRifleDecap::SniperRifleChargeRateMod"
				{
					type "sym"
					sym  "_ZN19CTFSniperRifleDecap24SniperRifleChargeRateModEv"
				}
				
				"MapEntity_ParseAllEntities"
				{
					type "sym"
					sym  "_Z26MapEntity_ParseAllEntitiesPKcP16IMapEntityFilterb"
				}
				"MapEntity_ParseEntity"
				{
					type "sym"
					sym  "_Z21MapEntity_ParseEntityRP11CBaseEntityPKcP16IMapEntityFilter"
				}
				"MapEntity_ParseToken"
				{
					type "sym"
					sym  "_Z20MapEntity_ParseTokenPKcPc"
				}
				
				"CTFBotProxy::CTFBotProxy [C1]"
				{
					type "sym"
					sym  "_ZN11CTFBotProxyC1Ev"
				}
				
				"CTFKnife::CanPerformBackstabAgainstTarget"
				{
					type "sym"
					sym  "_ZN8CTFKnife31CanPerformBackstabAgainstTargetEP9CTFPlayer"
				}
				
				"CTFKnife::IsBehindAndFacingTarget"
				{
					type "sym"
					sym  "_ZN8CTFKnife23IsBehindAndFacingTargetEP9CTFPlayer"
				}
				
				"CTFWeaponBaseMelee::DoSwingTrace"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee12DoSwingTraceER10CGameTrace"
				}
				
				"CTFGameRules::DropHalloweenSoulPack"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21DropHalloweenSoulPackEiRK6VectorP11CBaseEntityi"
				}
				
				"SVC_CmdKeyValues::Process"
				{
					type   "func knownvtidx"
					sym    "_ZN16SVC_CmdKeyValues7ProcessEv"
					vtable ".?AVSVC_CmdKeyValues@@"
					idx    "0x03"
					lib    "engine"
				}
				
				"CBaseTrigger::PassesTriggerFilters"
				{
					type "sym regex"
					sym  ".*CBaseTrigger.*PassesTriggerFilters.*"
				}
				
				"CL_TakeSnapshotAndSwap"
				{
					type   "func ebpprologue unistr"
					sym    "_Z22CL_TakeSnapshotAndSwapv"
					unistr "CL_TakeSnapshotAndSwap"
					lib    "engine"
				}
				
				"CVideoMode_Common::TakeSnapshotTGA"
				{
					type   "func ebpprologue nonunistr knownvtidx"
					sym    "_ZN17CVideoMode_Common15TakeSnapshotTGAEPKc"
					str    "Couldn't write bitmap data snapshot to file %s.\n"
					vtable ".?AVCVideoMode_Common@@"
					idx    "0x18"
					lib    "engine"
				}
				
				"CObjectSapper::IsValidRoboSapperTarget"
				{
					type "sym"
					sym  "_ZN13CObjectSapper23IsValidRoboSapperTargetEP9CTFPlayer"
				}
				
				"CObjectSapper::ApplyRoboSapper"
				{
					type "sym"
					sym  "_ZN13CObjectSapper15ApplyRoboSapperEP9CTFPlayerfi"
				}
				
				"CObjectSapper::ApplyRoboSapperEffects"
				{
					type "sym"
					sym  "_ZN13CObjectSapper22ApplyRoboSapperEffectsEP9CTFPlayerf"
				}
				
				"CTFSniperRifle::CreateSniperDot"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle15CreateSniperDotEv"
				}
				
				"CTFSniperRifle::CanFireCriticalShot"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle19CanFireCriticalShotEbP11CBaseEntity"
				}
				
				"CTFProjectile_Arrow::StrikeTarget"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow12StrikeTargetEP13mstudiobbox_tP11CBaseEntity"
				}
				
				"CTFGameRules::IsPVEModeControlled"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules19IsPVEModeControlledEP11CBaseEntity"
				}
				
				
				"SendProxy_LengthTable"
				{
					type "pattern"
					sym  "_Z21SendProxy_LengthTablePK8SendPropPKvS3_P20CSendProxyRecipientsi"
					seg  "text"
					seek "558bec8b45088b404cff7014ff70108b4008ff750cffd08b451083c40c5dc3"
					mask "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				
				
				
				
				"Con_ColorPrint"
				{
					type "sym"
					sym  "_Z15Con_ColorPrintfRK5ColorPKcz"
					lib  "engine"
				}
				
				"AllocPooledString"
				{
					type "sym"
					sym  "_Z17AllocPooledStringPKc"
				}
				"AllocPooledString_StaticConstantStringPointer"
				{
					type "sym"
					sym  "_Z45AllocPooledString_StaticConstantStringPointerPKc"
				}
				"FindPooledString"
				{
					type "sym"
					sym  "_Z16FindPooledStringPKc"
				}
				"GameStringSystem"
				{
					type "sym"
					sym  "_Z16GameStringSystemv"
				}
				
				"CEventQueue::AddEvent [EventQueuePrioritizedEvent_t *]"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEP28EventQueuePrioritizedEvent_t"
				}
				
				"CEventQueue::ServiceEvents"
				{
					type "sym"
					sym  "_ZN11CEventQueue13ServiceEventsEv"
				}
				
				"CBaseEntity::GetDataDescMap"
				{
					type   "func knownvtidx"
					sym    "_ZN11CBaseEntity14GetDataDescMapEv"
					vtable ".?AVCBaseEntity@@"
					idx    "0x0b"
				}
				
				"CUpgrades::UpgradeTouch"
				{
					type "sym"
					sym  "_ZN9CUpgrades12UpgradeTouchEP11CBaseEntity"
				}
				
				"IBaseObjectAutoList::m_IBaseObjectAutoListAutoList"
				{
					type "sym"
					sym  "_ZN19IBaseObjectAutoList29m_IBaseObjectAutoListAutoListE"
				}
				
				"CTFBotHintEngineerNest::IsStaleNest"
				{
					type "sym"
					sym  "_ZNK22CTFBotHintEngineerNest11IsStaleNestEv"
				}
				
				"CTFBotHintEngineerNest::DetonateStaleNest"
				{
					type "sym"
					sym  "_ZN22CTFBotHintEngineerNest17DetonateStaleNestEv"
				}
				
				"CTFGameRules::BetweenRounds_Start"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19BetweenRounds_StartEv"
				}
				
				"CBaseObject::InitializeMapPlacedObject"
				{
					type "sym"
					sym  "_ZN11CBaseObject25InitializeMapPlacedObjectEv"
				}
				
				"CBaseObject::FinishedBuilding"
				{
					type "sym"
					sym  "_ZN11CBaseObject16FinishedBuildingEv"
				}
				
				"CBaseObject::UpdateOnRemove"
				{
					type "sym"
					sym  "_ZN11CBaseObject14UpdateOnRemoveEv"
				}
				
				
				"tf_mvm_popfile"
				{
					type "sym"
					sym  "_ZL14tf_mvm_popfileRK8CCommand"
				}
				
				"CTeamplayRoundBasedRules::State_Enter"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules11State_EnterE22gamerules_roundstate_t"
				}
				
				"CTeamplayRoundBasedRules::State_Leave"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules11State_LeaveEv"
				}
				
				"GetWeaponId"
				{
					type "sym"
					sym  "_Z11GetWeaponIdPKc"
				}
				"WeaponIdToAlias"
				{
					type "sym"
					sym  "_Z15WeaponIdToAliasi"
				}
				
				"CTFGameRules::ApplyOnDamageModifyRules"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24ApplyOnDamageModifyRulesER15CTakeDamageInfoP11CBaseEntityb"
				}
				"CTFJar::FireJar"
				{
					type "sym"
					sym  "_ZN6CTFJar7FireJarEP9CTFPlayer"
				}
				"CTFJar::CreateJarProjectile"
				{
					type "sym"
					sym  "_ZN6CTFJar19CreateJarProjectileERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFJarMilk::CreateJarProjectile"
				{
					type "sym"
					sym  "_ZN10CTFJarMilk19CreateJarProjectileERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFJarGas::CreateJarProjectile"
				{
					type "sym"
					sym  "_ZN9CTFJarGas19CreateJarProjectileERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFCleaver::CreateJarProjectile"
				{
					type "sym"
					sym  "_ZN10CTFCleaver19CreateJarProjectileERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				
				"CTFProjectile_Arrow::ArrowTouch"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow10ArrowTouchEP11CBaseEntity"
				}
				
				"CTakeDamageInfo::CTakeDamageInfo [C1 | overload 5]"
				{
					type "sym"
					sym  "_ZN15CTakeDamageInfoC1EP11CBaseEntityS1_S1_RK6VectorS4_fiiPS2_"
				}
				
				"CTraceFilterSimple::CTraceFilterSimple [C1]"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimpleC1EPK13IHandleEntityiPFbPS0_iE"
				}
				
				"CTFProjectile_Rocket::Spawn"
				{
					type "sym"
					sym  "_ZN20CTFProjectile_Rocket5SpawnEv"
				}
				
				"CTFBaseRocket::GetOwnerPlayer"
				{
					type "sym"
					sym  "_ZNK13CTFBaseRocket14GetOwnerPlayerEv"
				}
				
				"PointInRespawnRoom"
				{
					type "sym"
					sym  "_Z18PointInRespawnRoomPK11CBaseEntityRK6Vectorb"
				}
				
				"CBaseAnimating::SetBodygroup"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating12SetBodygroupEii"
				}
				"CBaseAnimating::GetBodygroup"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating12GetBodygroupEi"
				}
				"CBaseAnimating::GetBodygroupName"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating16GetBodygroupNameEi"
				}
				"CBaseAnimating::FindBodygroupByName"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating19FindBodygroupByNameEPKc"
				}
				"CBaseAnimating::GetBodygroupCount"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating17GetBodygroupCountEi"
				}
				"CBaseAnimating::GetNumBodyGroups"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating16GetNumBodyGroupsEv"
				}
				
				"CEconItemDefinition::BInitFromKV"
				{
					type "sym"
					sym  "_ZN19CEconItemDefinition11BInitFromKVEP9KeyValuesP10CUtlVectorI10CUtlString10CUtlMemoryIS3_iEE"
				}
				
				"CheckValveSignature"
				{
					type "sym"
					sym  "_Z19CheckValveSignaturePKvjS0_j"
				}
				
				
				"CTFAmmoPack::Create"
				{
					type "sym"
					sym  "_ZN11CTFAmmoPack6CreateERK6VectorRK6QAngleP11CBaseEntityPKc"
				}
				
				"CTFDroppedWeapon::Create"
				{
					type "sym"
					sym  "_ZN16CTFDroppedWeapon6CreateEP9CTFPlayerRK6VectorRK6QAnglePKcPK13CEconItemView"
				}
				
				"CTFFlameThrower::GetMuzzlePosHelper"
				{
					type "sym"
					sym  "_ZN15CTFFlameThrower18GetMuzzlePosHelperEb"
				}
				
				"CTeamplayRoundBasedRules::GetMinTimeWhenPlayerMaySpawn"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules28GetMinTimeWhenPlayerMaySpawnEP11CBasePlayer"
				}
				
				"CTeamplayRoundBasedRules::GetNextRespawnWave"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules18GetNextRespawnWaveEiP11CBasePlayer"
				}
				
				"CMultiPlayerAnimState::OnNewModel"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState10OnNewModelEv"
				}
				
				"CTFGameRules::GetTeamAssignmentOverride"
				{
					type "sym"
					sym  "_ZN12CTFGameRules25GetTeamAssignmentOverrideEP9CTFPlayerib"
				}
				
				"CBaseAnimating::ResetSequenceInfo"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating17ResetSequenceInfoEv"
				}
				
				"CBaseAnimating::ResetSequence"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating13ResetSequenceEi"
				}
				
				"CTFWearable::CanEquip"
				{
					type "sym"
					sym  "_ZN11CTFWearable8CanEquipEP11CBaseEntity"
				}
				
				"CStudioHdr::GetNumPoseParameters"
				{
					type "sym"
					sym  "_ZNK10CStudioHdr20GetNumPoseParametersEv"
				}
				
				"CStudioHdr::pPoseParameter"
				{
					type "sym"
					sym  "_ZN10CStudioHdr14pPoseParameterEi"
				}
				
				"CBaseAnimating::GetModelPtr"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating11GetModelPtrEv"
				}
				
				"CBaseAnimating::LookupPoseParameter"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating19LookupPoseParameterEP10CStudioHdrPKc"
				}
				
				"CBaseAnimating::GetPoseParameter [int]"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating16GetPoseParameterEi"
				}
				
				"CBaseAnimating::GetPoseParameter [str]"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating16GetPoseParameterEPKc"
				}
				
				
				
				"CTFGameRules::ClientCommandKeyValues"
				{
					type "sym"
					sym  "_ZN12CTFGameRules22ClientCommandKeyValuesEP7edict_tP9KeyValues"
				}
				
				"CPlayerMove::StartCommand"
				{
					type "sym"
					sym  "_ZN11CPlayerMove12StartCommandEP11CBasePlayerP8CUserCmd"
				}
				
				"CTFGameRules::DistributeCurrencyAmount"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24DistributeCurrencyAmountEiP9CTFPlayerbbb"
				}
				
				"Con_NPrintf"
				{
					type "sym"
					sym  "_Z11Con_NPrintfiPKcz"
					lib  "engine"
				}
				"IVEngineServer::Con_NPrintf"
				{
					type "sym"
					sym  "_ZN14CVEngineServer11Con_NPrintfEiPKcz"
					lib  "engine"
				}
				"IVEngineServer::Con_NXPrintf"
				{
					type "sym"
					sym  "_ZN14CVEngineServer12Con_NXPrintfEPK12con_nprint_sPKcz"
					lib  "engine"
				}
				
				"CTeamplayRoundBasedRules::State_Transition"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules16State_TransitionE22gamerules_roundstate_t"
				}
				
				"CSmokeStack::KeyValue"
				{
					type "sym"
					sym  "_ZN11CSmokeStack8KeyValueEPKcS1_"
				}
				
				"CEconEntity::DebugDescribe"
				{
					type "sym"
					sym  "_ZN11CEconEntity13DebugDescribeEv"
				}
				
				"CPointPopulatorInterface::InputChangeBotAttributes"
				{
					type "sym"
					sym  "_ZN24CPointPopulatorInterface24InputChangeBotAttributesER11inputdata_t"
				}
				
				"UTIL_GetHolidayForString"
				{
					type "sym"
					sym  "_Z24UTIL_GetHolidayForStringPKc"
				}
				
				"UTIL_IsHolidayActive"
				{
					type "sym"
					sym  "_Z20UTIL_IsHolidayActivei"
				}
				
				"CCaptureFlag::GetMaxReturnTime"
				{
					type "sym"
					sym  "_ZN12CCaptureFlag16GetMaxReturnTimeEv"
				}
				
				"Con_DebugLog"
				{
					type "sym"
					sym  "_Z12Con_DebugLogPKcz"
					lib  "engine"
				}
				
				"_SpewMessage [internal]"
				{
					type "sym"
					sym  "_ZL12_SpewMessage10SpewType_tPKciPK5ColorS1_Pc"
					lib  "tier0"
				}
				
				
				
				"CanScatterGunKnockBack"
				{
					type "sym"
					sym  "_Z22CanScatterGunKnockBackP13CTFWeaponBaseff"
				}
				
				"CTFScatterGun::ApplyPostHitEffects"
				{
					type "sym"
					sym  "_ZN13CTFScatterGun19ApplyPostHitEffectsERK15CTakeDamageInfoP9CTFPlayer"
				}
				
				"CTFProjectile_Flare::Explode"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Flare7ExplodeEP10CGameTraceP11CBaseEntity"
				}
				
				"CTFGrenadePipebombProjectile::PipebombTouch"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile13PipebombTouchEP11CBaseEntity"
				}
				
				"CheckMedicResist"
				{
					type "sym regex"
					sym  "_ZL16CheckMedicResist7ETFCondS_P9CTFPlayerfRfbS2_\\.isra\\..*"
				}
				
				"CBaseGrenade::SetDamage"
				{
					type "sym"
					sym  "_ZN12CBaseGrenade9SetDamageEf"
				}
				
				"CTFCompoundBow::GetChargeMaxTime"
				{
					type "sym"
					sym  "_ZN14CTFCompoundBow16GetChargeMaxTimeEv"
				}
				
				"CTFCompoundBow::GetCurrentCharge"
				{
					type "sym"
					sym  "_ZN14CTFCompoundBow16GetCurrentChargeEv"
				}
				
				"CTFCompoundBow::GetProjectileDamage"
				{
					type "sym"
					sym  "_ZN14CTFCompoundBow19GetProjectileDamageEv"
				}
				
				"CCurrencyPack::AffectedByRadiusCollection"
				{
					type "sym"
					sym  "_ZNK13CCurrencyPack26AffectedByRadiusCollectionEv"
				}
				
				"CTargetChangeGravity::InputChangeGrav"
				{
					type "sym"
					sym  "_ZN20CTargetChangeGravity15InputChangeGravER11inputdata_t"
				}
				
				"CTargetChangeGravity::InputResetGrav"
				{
					type "sym"
					sym  "_ZN20CTargetChangeGravity14InputResetGravER11inputdata_t"
				}
				
				"CTFGrenadeLauncher::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN18CTFGrenadeLauncher15SecondaryAttackEv"
				}
				
				"CTFPipebombLauncher::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN19CTFPipebombLauncher15SecondaryAttackEv"
				}
				
				"CTFWeaponBaseMelee::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee15SecondaryAttackEv"
				}
				
				
				"CEconEntity::GetAttributeContainer"
				{
					type "sym"
					sym  "_ZN11CEconEntity21GetAttributeContainerEv"
				}
				
				"CEconItemDefinition::BInitVisualBlockFromKV"
				{
					type "sym"
					sym  "_ZN19CEconItemDefinition22BInitVisualBlockFromKVEP9KeyValuesP10CUtlVectorI10CUtlString10CUtlMemoryIS3_iEE"
				}
				
				"CTFBaseRocket::Destroy"
				{
					type "sym"
					sym  "_ZN13CTFBaseRocket7DestroyEbb"
				}
				
				"CCaptureZone::ShimTouch"
				{
					type "sym"
					sym  "_ZN12CCaptureZone9ShimTouchEP11CBaseEntity"
				}
				
				"CTFItem::GetItemID"
				{
					type "sym"
					sym  "_ZNK7CTFItem9GetItemIDEv"
				}
				
				"CTFGameRules::FlagsMayBeCapped"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16FlagsMayBeCappedEv"
				}
				
				"CCaptureZone::Capture"
				{
					type "sym"
					sym  "_ZN12CCaptureZone7CaptureEP11CBaseEntity"
				}
				
				"CTFGameRules::SetWinningTeam"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14SetWinningTeamEiibbbb"
				}
				
				"CTFGameRules::FireGameEvent"
				{
					type "sym"
					sym  "_ZN12CTFGameRules13FireGameEventEP10IGameEvent"
				}
				
				"CBaseObject::GetMiniBuildingStartingHealth"
				{
					type "sym"
					sym  "_ZN11CBaseObject29GetMiniBuildingStartingHealthEv"
				}
				
				"CBaseObject::GetMaxHealthForCurrentLevel"
				{
					type "sym"
					sym  "_ZN11CBaseObject27GetMaxHealthForCurrentLevelEv"
				}
				
				"CObjectSentrygun::MakeDisposableBuilding"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun22MakeDisposableBuildingEP9CTFPlayer"
				}
				
				"CBaseObject::SetHealth"
				{
					type "sym"
					sym  "_ZN11CBaseObject9SetHealthEf"
				}
				
				"CBaseAnimating::GetBoneTransform"
				{
					type "pattern"
					sym  "_ZN14CBaseAnimating16GetBoneTransformEiR11matrix3x4_t"
					seg  "text"
					seek "558bec568bf180be4103000000757483be6c040000007510e83341020085c074078bcee8c81b00008b866c04000085c07451833800744c578b7d0885ff78438b003bb89c000000"
					mask "ffffffffffffffff0000ffffffff00ffff0000ffffffffffff00000000ffffffffffffff00000000ffff0000ffffffffff00ffffffff00ffffffffffffff00ffffffff0000ffff"
				}
				
				"ILocomotion::IsPotentiallyTraversable"
				{
					type "sym"
					sym  "_ZNK11ILocomotion24IsPotentiallyTraversableERK6VectorS2_NS_16TraverseWhenTypeEPf"
				}
				
				"CSteamID::Render [static]"
				{
					type "sym"
					sym  "_ZN8CSteamID6RenderEy"
				}
				"CSteamID::Render [member]"
				{
					type "sym"
					sym  "_ZNK8CSteamID6RenderEv"
				}
				
				"CTFItemDefinition::GetLoadoutSlot"
				{
					type "sym"
					sym  "_ZNK17CTFItemDefinition14GetLoadoutSlotEi"
				}
				
				
				
				"ItemGeneration"
				{
					type "sym"
					sym  "_Z14ItemGenerationv"
				}
				
				"CEconItemView::Init"
				{
					type "sym"
					sym  "_ZN13CEconItemView4InitEiiij"
				}
				
				"CEconItemView::GetStaticData"
				{
					type "sym"
					sym  "_ZNK13CEconItemView13GetStaticDataEv"
				}
				
				"CEconItemAttribute::GetStaticData"
				{
					type "sym"
					sym  "_ZNK18CEconItemAttribute13GetStaticDataEv"
				}
				
				"CEconItemView::CEconItemView [C1]"
				{
					type "sym"
					sym  "_ZN13CEconItemViewC1Ev"
				}
				
				"CEconItemAttribute::CEconItemAttribute [C1]"
				{
					type "sym"
					sym  "_ZN18CEconItemAttributeC1Ev"
				}
				
				"CTFGameRules::SetCustomUpgradesFile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21SetCustomUpgradesFileER11inputdata_t"
				}
				
				"CEconEntity::GiveTo"
				{
					type "sym"
					sym  "_ZN11CEconEntity6GiveToEP11CBaseEntity"
				}
				
				"CEconItemSchema::GetEquipRegionBitMaskByName"
				{
					type "sym"
					sym  "_ZNK15CEconItemSchema27GetEquipRegionBitMaskByNameEPKc"
				}
				
				"CUpgrades::PlayerPurchasingUpgrade"
				{
					type "sym"
					sym  "_ZN9CUpgrades23PlayerPurchasingUpgradeEP9CTFPlayeriibbb"
				}
				
				"CollectPlayers<CTFPlayer>"
				{
					type "sym"
					sym  "_Z14CollectPlayersI9CTFPlayerEiP10CUtlVectorIPT_10CUtlMemoryIS3_iEEibb"
				}
				
				"CTFPowerup::ValidTouch"
				{
					type "sym"
					sym  "_ZN10CTFPowerup10ValidTouchEP11CBasePlayer"
				}
				
				"DataTable_Warning"
				{
					type "sym"
					sym  "_Z17DataTable_WarningPKcz"
					lib  "engine"
				}
				
				"CopyStringAttributeValueToCharPointerOutput"
				{
					type "sym"
					sym  "_Z43CopyStringAttributeValueToCharPointerOutputPK17CAttribute_StringPPKc"
				}
				
				"CBaseObject::DetonateObject"
				{
					type "sym"
					sym  "_ZN11CBaseObject14DetonateObjectEv"
				}
				
				"CHalloweenBaseBoss::SpawnBossAtPos"
				{
					type "sym"
					sym  "_ZN18CHalloweenBaseBoss14SpawnBossAtPosE17HalloweenBossTypeRK6VectoriP11CBaseEntity"
				}
				
				"CServerGameDLL::ServerActivate"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL14ServerActivateEP7edict_tii"
				}
				
				"CMapListManager::RefreshList"
				{
					type "sym"
					sym  "_ZN15CMapListManager11RefreshListEv"
					lib  "engine"
				}
				"CMapListManager::GetMapCount"
				{
					type "sym"
					sym  "_ZNK15CMapListManager11GetMapCountEv"
					lib  "engine"
				}
				"CMapListManager::IsMapValid"
				{
					type "sym"
					sym  "_ZNK15CMapListManager10IsMapValidEi"
					lib  "engine"
				}
				"CMapListManager::GetMapName"
				{
					type "sym"
					sym  "_ZNK15CMapListManager10GetMapNameEi"
					lib  "engine"
				}
				
				"Cbuf_Execute"
				{
					type "sym"
					sym  "_Z12Cbuf_Executev"
					lib  "engine"
				}
				"PrecachePointTemplates"
				{
					type "sym"
					sym  "_Z22PrecachePointTemplatesv"
				}
				"CEnvEntityMaker::SpawnEntity"
				{
					type "sym"
					sym  "_ZN15CEnvEntityMaker11SpawnEntityE6Vector6QAngle"
				}
				"CEnvEntityMaker::InputForceSpawn"
				{
					type "sym"
					sym  "_ZN15CEnvEntityMaker15InputForceSpawnER11inputdata_t"
				}
				"CEnvEntityMaker::InputForceSpawnAtEntityOrigin"
				{
					type "sym"
					sym  "_ZN15CEnvEntityMaker29InputForceSpawnAtEntityOriginER11inputdata_t"
				}
				"CEventQueue::AddEvent"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEPKcS1_9variant_tfP11CBaseEntityS4_i"
				}
				"CBaseAnimating::LookupBone"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating10LookupBoneEPKc"
				}
				"CBaseAnimating::GetBonePosition"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating15GetBonePositionEiR6VectorR6QAngle"
				}
				"CTFBotMvMEngineerHintFinder::FindHint"
				{
					type "sym"
					sym  "_ZN27CTFBotMvMEngineerHintFinder8FindHintEbbP7CHandleI22CTFBotHintEngineerNestE"
				}
				"TE_TFParticleEffect"
				{
					type "sym"
					sym  "_Z19TE_TFParticleEffectR16IRecipientFilterfPKc6Vector6QAngleP11CBaseEntity20ParticleAttachment_t"
				}
				"TE_TFParticleEffectComplex"
				{
					type "sym"
					sym  "_Z26TE_TFParticleEffectComplexR16IRecipientFilterfPKc6Vector6QAngleP31te_tf_particle_effects_colors_tP38te_tf_particle_effects_control_point_tP11CBaseEntity20ParticleAttachment_tS3_"
				}
				
				"DoTeleporterOverride"
				{
					type "sym"
					sym  "_Z20DoTeleporterOverrideP11CBaseEntityR6Vectorb"
				}
				"CTFGameRules::OnPlayerSpawned"
				{
					type "sym"
					sym  "_ZN12CTFGameRules15OnPlayerSpawnedEP9CTFPlayer"
				}
				"CVoteController::Spawn"
				{
					type "sym"
					sym  "_ZN15CVoteController5SpawnEv"
				}
				"CBaseIssue::CBaseIssue"
				{
					type "sym"
					sym  "_ZN10CBaseIssueC1EPKc"
				}
				"UserMessageBegin"
				{
					type "sym"
					sym  "_Z16UserMessageBeginR16IRecipientFilterPKc"
				}
				"MessageWriteString"
				{
					type "sym"
					sym  "_Z18MessageWriteStringPKc"
				}
				"CVoteController::RegisterIssue"
				{
					type "sym"
					sym  "_ZN15CVoteController13RegisterIssueEP10CBaseIssue"
				}
				"CTFProjectile_Rocket::IsDeflectable"
				{
					type "sym"
					sym  "_ZN20CTFProjectile_Rocket13IsDeflectableEv"
				}
				"CPlayerInventory::GetInventoryItemByItemID"
				{
					type "sym"
					sym  "_ZN16CPlayerInventory24GetInventoryItemByItemIDEyPi"
				}
				"CSchemaFieldHandle<CEconItemDefinition>::CSchemaFieldHandle"
				{
					type "sym"
					sym  "_ZN18CSchemaFieldHandleI19CEconItemDefinitionEC1EPKc"
				}
				"CSchemaFieldHandle<CEconItemDefinition>::CSchemaFieldHandle2"
				{
					type "sym"
					sym  "_ZN18CSchemaFieldHandleI19CEconItemDefinitionEC2EPKc"
				}
				"CTFMedigunShield::Create"
				{
					type "sym"
					sym  "_ZN16CTFMedigunShield6CreateEP9CTFPlayer"
				}
				"CTFFlameManager::GetFlameDamageScale"
				{
					type "sym"
					sym  "_ZNK15CTFFlameManager19GetFlameDamageScaleEPK10tf_point_tP9CTFPlayer"
				}
				"CTFFlameManager::OnCollide"
				{
					type "sym"
					sym  "_ZN15CTFFlameManager9OnCollideEP11CBaseEntityi"
				}
				"CTFObjectiveResource::DecrementMannVsMachineWaveClassCount"
				{
					type "sym"
					sym  "_ZN20CTFObjectiveResource36DecrementMannVsMachineWaveClassCountE8string_tj"
				}
				"CTFProjectile_HealingBolt::CanHeadshot"
				{
					type "sym"
					sym  "_ZN25CTFProjectile_HealingBolt11CanHeadshotEv"
				}
				"CBaseProjectile::Spawn"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile5SpawnEv"
				}
				"CWeaponMedigun::AddCharge"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun9AddChargeEf"
				}
				"CTraceFilterIgnoreFriendlyCombatItems::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN37CTraceFilterIgnoreFriendlyCombatItems15ShouldHitEntityEP13IHandleEntityi"
				}
				"CTFWeaponBaseMelee::Smack"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee5SmackEv"
				}
				"CTFWeaponBaseMelee::GetSmackTime"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee12GetSmackTimeEi"
				}
				"CTFLaserPointer::CreateLaserDot"
				{
					type "sym"
					sym  "_ZN15CTFLaserPointer14CreateLaserDotEv"
				}
				"CTFRevolver::CanFireCriticalShot"
				{
					type "sym"
					sym  "_ZN11CTFRevolver19CanFireCriticalShotEbP11CBaseEntity"
				}
				"CBaseProjectile::Destroy"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile7DestroyEbb"
				}
				"CTFPlayerShared::OnAddMVMBotRadiowave"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared20OnAddMVMBotRadiowaveEv"
				
				}
				"CTFGameRules::ClientConnected"
				{
					type "sym"
					sym  "_ZN12CTFGameRules15ClientConnectedEP7edict_tPKcS3_Pci"
				}
				"CAmmoPack::Precache"
				{
					type "sym"
					sym  "_ZN9CAmmoPack8PrecacheEv"
				}
				"CTFPowerup::Spawn"
				{
					type "sym"
					sym  "_ZN10CTFPowerup5SpawnEv"
				}
				"CEconItemSchema::BInitAttributes"
				{
					type "sym"
					sym  "_ZN15CEconItemSchema15BInitAttributesEP9KeyValuesP10CUtlVectorI10CUtlString10CUtlMemoryIS3_iEE"
				}
				"PrecacheParticleSystem"
				{
					type "sym"
					sym  "_Z22PrecacheParticleSystemPKc"
				}
				"CTeamplayRoundBasedRules::SetForceMapReset"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules16SetForceMapResetEb"
				}
				"CGameEventManager::CreateEvent"
				{
					type "sym"
					sym  "_ZN17CGameEventManager11CreateEventEPKcb"
				}
				"CGameEventManager::FireEventIntern"
				{
					type "sym"
					sym  "_ZN17CGameEventManager15FireEventInternEP10IGameEventbb"
				}
				"ReadEncryptedKVFile"
				{
					type "sym"
					sym  "_Z19ReadEncryptedKVFileP11IFileSystemPKcPKhb"
				}
				"CTFProjectile_Arrow::Create"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow6CreateERK6VectorRK6QAngleff16ProjectileType_tP11CBaseEntityS8_"
				}
				"CBaseProjectile::SetLauncher"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile11SetLauncherEP11CBaseEntity"
				}
				"CTFBaseProjectile::SetDamage"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile9SetDamageEf"
				}
				"CTFCompoundBow::LaunchGrenade"
				{
					type "sym"
					sym  "_ZN14CTFCompoundBow13LaunchGrenadeEv"
				}
				"CWeaponMedigun::HealTargetThink"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun15HealTargetThinkEv"
				}
				"CWeaponMedigun::GetHealRate"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun11GetHealRateEv"
				}
				"CEconItem::AddDynamicAttributeInternal"
				{
					type "sym"
					sym  "_ZN9CEconItem27AddDynamicAttributeInternalEv"
				}
				"CEconItemView::GetSOCData"
				{
					type "sym"
					sym  "_ZNK13CEconItemView10GetSOCDataEv"
				}
				"CTFWeaponBaseMelee::Holster"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee7HolsterEP17CBaseCombatWeapon"
				}
				"CTFWeaponBaseMelee::Swing"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee5SwingEP9CTFPlayer"
				}
				"CBaseObject::OnTakeDamage"
				{
					type "sym"
					sym  "_ZN11CBaseObject12OnTakeDamageERK15CTakeDamageInfo"
				}
				"CTFStickBomb::Smack"
				{
					type "sym"
					sym  "_ZN12CTFStickBomb5SmackEv"
				}
				"CTFGameMovement::CheckJumpButton"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15CheckJumpButtonEv"
				}
				"CEconEntity::UpdateModelToClass"
				{
					type "sym"
					sym  "_ZN11CEconEntity18UpdateModelToClassEv"
				}
				"CTFTankBoss::UpdatePingSound"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss15UpdatePingSoundEv"
				}
				"CTFTankBoss::Spawn"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss5SpawnEv"
				}
				"TE_TFExplosion"
				{
					type "sym"
					sym  "_Z14TE_TFExplosionR16IRecipientFilterfRK6VectorS3_iiiii"
				}
				"GetParticleSystemIndex"
				{
					type "sym"
					sym  "_Z22GetParticleSystemIndexPKc"
				}
				"UTIL_SetSize"
				{
					type "sym"
					sym  "_Z12UTIL_SetSizeP11CBaseEntityRK6VectorS3_"
				}
				"CTFCompoundBow::GetProjectileSpeed"
				{
					type "sym"
					sym  "_ZN14CTFCompoundBow18GetProjectileSpeedEv"
				}
				"CTFRaygun::GetProjectileSpeed"
				{
					type "sym"
					sym  "_ZN9CTFRaygun18GetProjectileSpeedEv"
				}
				"CTFCrossbow::GetProjectileSpeed"
				{
					type "sym"
					sym  "_ZN11CTFCrossbow18GetProjectileSpeedEv"
				}
				"CTFProjectile_EnergyRing::GetInitialVelocity"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyRing18GetInitialVelocityEv"
				}
				"CTFWeaponBaseMelee::OnSwingHit"
				{
					type "sym"
					sym  "_ZN18CTFWeaponBaseMelee10OnSwingHitER10CGameTrace"
				}
				"CTFGrapplingHook::GetProjectileSpeed"
				{
					type "sym"
					sym  "_ZN16CTFGrapplingHook18GetProjectileSpeedEv"
				}
				"CTFShotgunBuildingRescue::GetProjectileSpeed"
				{
					type "sym"
					sym  "_ZN24CTFShotgunBuildingRescue18GetProjectileSpeedEv"
				}
				"CTFBaseRocket::Explode"
				{
					type "sym"
					sym  "_ZN13CTFBaseRocket7ExplodeEP10CGameTraceP11CBaseEntity"
				}
				"TE_DispatchEffect"
				{
					type "sym"
					sym  "_Z17TE_DispatchEffectR16IRecipientFilterfRK6VectorPKcRK11CEffectData"
				}
				"CTempEntsSystem::DispatchEffect"
				{
					type "sym"
					sym  "_ZN15CTempEntsSystem14DispatchEffectER16IRecipientFilterfRK6VectorPKcRK11CEffectData"
				}
				"CRecipientFilter::IgnorePredictionCull"
				{
					type "sym"
					sym  "_ZNK16CRecipientFilter20IgnorePredictionCullEv"
				}
				"CMatchInfo::GetNumActiveMatchPlayers"
				{
					type "sym"
					sym  "_ZNK10CMatchInfo24GetNumActiveMatchPlayersEv"
				}
				"CTFGCServerSystem::PreClientUpdate"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem15PreClientUpdateEv"
				}
				"CTFGameRules::PlayerReadyStatus_ShouldStartCountdown"
				{
					type "sym"
					sym  "_ZN12CTFGameRules38PlayerReadyStatus_ShouldStartCountdownEv"
				}
				"CTFBaseBoss::OnTakeDamage"
				{
					type "sym"
					sym  "_ZN11CTFBaseBoss12OnTakeDamageERK15CTakeDamageInfo"
				}
				"DispatchEffect"
				{
					type "sym"
					sym  "_Z14DispatchEffectPKcRK11CEffectDataR16CRecipientFilter"
				}
				"UTIL_HudMessage"
				{
					type "sym"
					sym  "_Z15UTIL_HudMessageP11CBasePlayerRK14hudtextparms_sPKc"
				}
				"CGameText::KeyValue"
				{
					type "sym"
					sym  "_ZN9CGameText8KeyValueEPKcS1_"
				}
				"CTFPlayer::RemoveAmmo"
				{
					type "sym"
					sym  "_ZN9CTFPlayer10RemoveAmmoEii"
				}
				"CTFMinigun::CanHolster"
				{
					type "sym"
					sym  "_ZNK10CTFMinigun10CanHolsterEv"
				}
				"CObjectTeleporter::DeterminePlaybackRate"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter21DeterminePlaybackRateEv"
				}
				"CBaseObject::ShouldQuickBuild"
				{
					type "sym"
					sym  "_ZN11CBaseObject16ShouldQuickBuildEv"
				}
				"CTFBotVision::UpdatePotentiallyVisibleNPCVector"
				{
					type "sym"
					sym  "_ZN12CTFBotVision33UpdatePotentiallyVisibleNPCVectorEv"
				}
				"CTFKnife::DisguiseOnKill"
				{
					type "sym"
					sym  "_ZN8CTFKnife14DisguiseOnKillEv"
				}
				"CTFPlayerShared::Disguise"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared8DisguiseEiiP9CTFPlayerb"
				}
				"CObjectSapper::IsParentValid"
				{
					type "sym"
					sym  "_ZN13CObjectSapper13IsParentValidEv"
				}
				"CTFGameRules::ShouldRespawnQuickly"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20ShouldRespawnQuicklyEP11CBasePlayer"
				}
				"TE_PlayerAnimEvent"
				{
					type "sym"
					sym  "_Z18TE_PlayerAnimEventP11CBasePlayer17PlayerAnimEvent_ti"
				}
				"CBaseTempEntity::Create"
				{
					type "sym"
					sym  "_ZN15CBaseTempEntity6CreateER16IRecipientFilterf"
				}
				"CBaseTempEntity::GetServerClass"
				{
					type "sym"
					sym  "_ZN15CBaseTempEntity14GetServerClassEv"
				}
				"CAttributeList::SetRuntimeAttributeValue"
				{
					type "sym"
					sym  "_ZN14CAttributeList24SetRuntimeAttributeValueEPK28CEconItemAttributeDefinitionf"
				}
				"CTFBaseRocket::SetDamage"
				{
					type "sym"
					sym  "_ZN13CTFBaseRocket9SetDamageEf"
				}
				"CObjectSentrygun::FireRocket"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun10FireRocketEv"
				}
				"TF_IsHolidayActive"
				{
					type "sym"
					sym  "_Z18TF_IsHolidayActivei"
				}
				"CTFProjectile_SentryRocket::Create"
				{
					type "sym"
					sym  "_ZN26CTFProjectile_SentryRocket6CreateERK6VectorRK6QAngleP11CBaseEntityS7_"
				}
				"CTFPointWeaponMimic::Fire"
				{
					type "sym"
					sym  "_ZN19CTFPointWeaponMimic4FireEv"
				}
				"CTFProjectile_Rocket::Create"
				{
					type "sym"
					sym  "_ZN20CTFProjectile_Rocket6CreateEP11CBaseEntityRK6VectorRK6QAngleS1_S1_"
				}
				"CCaptureFlag::PickUp"
				{
					type "sym"
					sym  "_ZN12CCaptureFlag6PickUpEP9CTFPlayerb"
				}
				"CBaseObject::CanBeUpgraded"
				{
					type "sym"
					sym  "_ZN11CBaseObject13CanBeUpgradedEP9CTFPlayer"
				}
				"CBaseObject::StartUpgrading"
				{
					type "sym"
					sym  "_ZN11CBaseObject14StartUpgradingEv"
				}
				"CBaseObject::GetMaxUpgradeLevel"
				{
					type "sym"
					sym  "_ZN11CBaseObject18GetMaxUpgradeLevelEv"
				}
				"CObjectSentrygun::SentryThink"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun11SentryThinkEv"
				}
				"CTeam::AddPlayer"
				{
					type "sym"
					sym  "_ZN5CTeam9AddPlayerEP11CBasePlayer"
				}
				"CObjectSentrygun::FindTarget"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun10FindTargetEv"
				}
				"CTFProjectile_EnergyRing::CanHeadshot"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyRing11CanHeadshotEv"
				}
				"CTFProjectile_Arrow::CanHeadshot"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow11CanHeadshotEv"
				}
				"CTFProjectile_GrapplingHook::CanHeadshot"
				{
					type "sym"
					sym  "_ZN27CTFProjectile_GrapplingHook11CanHeadshotEv"
				}
				"CTFProjectile_EnergyBall::CanHeadshot"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyBall11CanHeadshotEv"
				}
				"ApplyUpgrade_Default"
				{
					type "sym"
					sym  "_ZL20ApplyUpgrade_DefaultRK22CMannVsMachineUpgradesP9CTFPlayerP13CEconItemViewib"
				}
				"CMannVsMachineUpgradeManager::LoadUpgradesFileFromPath"
				{
					type "sym"
					sym  "_ZN28CMannVsMachineUpgradeManager24LoadUpgradesFileFromPathEPKc"
				}
				"CUpgrades::ApplyUpgradeToItem"
				{
					type "sym"
					sym  "_ZN9CUpgrades18ApplyUpgradeToItemEP9CTFPlayerP13CEconItemViewiibb"
				}
				"GetUpgradeStepData"
				{
					type "sym"
					sym  "_Z18GetUpgradeStepDataP9CTFPlayeriiRiRb"
				}
				"CVGUILocalizationProvider::ConvertLoccharToANSI"
				{
					type "sym"
					sym  "_ZNK25CVGUILocalizationProvider20ConvertLoccharToANSIEPKwPci"
				}
				"CEconItemSchema::ItemTesting_CreateTestDefinition"
				{
					type "sym"
					sym  "_ZN15CEconItemSchema32ItemTesting_CreateTestDefinitionEiiP9KeyValues"
				}
				"CItemGeneration::SpawnItem [defIndex]"
				{
					type "sym"
					sym  "_ZN15CItemGeneration9SpawnItemEiRK6VectorRK6QAngleiiPKc"
				}
				"CTFGrenadePipebombProjectile::VPhysicsCollision"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile17VPhysicsCollisionEiP21gamevcollisionevent_t"
				}
				"PropDynamic_CollidesWithGrenades"
				{
					type "sym"
					sym  "_Z32PropDynamic_CollidesWithGrenadesP11CBaseEntity"
				}
				"CTFProjectile_Flare::PerformCustomPhysics"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Flare20PerformCustomPhysicsEP6VectorS1_P6QAngleS3_"
				}
				"CBaseClient::SendNetMsg"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient10SendNetMsgER11INetMessageb"
				}
				"CMannVsMachineStats::PlayerEvent_Upgraded"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20PlayerEvent_UpgradedEP9CTFPlayertthsb"
				}
				"CMannVsMachineStats::NotifyTargetPlayerEvent"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats23NotifyTargetPlayerEventEP9CTFPlayerj19eMannVsMachineEventi"
				}
				"CTFPistol_ScoutPrimary::Push"
				{
					type "sym"
					sym  "_ZN22CTFPistol_ScoutPrimary4PushEv"
				}
				"static_attrib_t::BInitFromKV_SingleLine"
				{
					type "sym"
					sym  "_ZN15static_attrib_t22BInitFromKV_SingleLineEPKcP9KeyValuesP10CUtlVectorI10CUtlString10CUtlMemoryIS5_iEEb"
				}
				"CTFTankBoss::Explode"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss7ExplodeEv"
				}
				"CTFTankBoss::UpdateOnRemove"
				{
					type "sym"
					sym  "_ZN11CTFTankBoss14UpdateOnRemoveEv"
				}
				"CTraceFilterObject::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterObject15ShouldHitEntityEP13IHandleEntityi"
				}
				"ToTFBot"
				{
					type "sym"
					sym  "_Z7ToTFBotP11CBaseEntity"
				}
				"CGameClient::ShouldSendMessages"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CGameClient18ShouldSendMessagesEv"
				}
				"SV_ComputeClientPacks"
				{
					type "sym"
					lib  "engine"
					sym  "_Z21SV_ComputeClientPacksiPP11CGameClientP14CFrameSnapshot"
				}
				"CHLTVServer::RunFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer8RunFrameEv"
				}
				"CGameServer::SetHibernating"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CGameServer14SetHibernatingEb"
				}
				"CHLTVServer::StartMaster"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer11StartMasterEP11CGameClient"
				}
				"CBaseServer::CreateFakeClient"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer16CreateFakeClientEPKc"
				}
				"CBaseClient::ShouldSendMessages"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient18ShouldSendMessagesEv"
				}
				"CClientFrameManager::DeleteClientFrames"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager18DeleteClientFramesEi"
				}
				"CTFRobotArm::Smack"
				{
					type "sym"
					sym  "_ZN11CTFRobotArm5SmackEv"
				}
				"CServerGameEnts::CheckTransmit"
				{
					type "sym"
					sym  "_ZN15CServerGameEnts13CheckTransmitEP18CCheckTransmitInfoPKti"
				}
				"SendTable_CalcDelta"
				{
					type "sym"
					lib  "engine"
					sym  "_Z19SendTable_CalcDeltaPK9SendTablePKviS3_iPiii"
				}
				"CEconEntity::GetAttributeManager"
				{
					type "sym"
					sym  "_ZN11CEconEntity19GetAttributeManagerEv"
				}
				"CAttributeManager::GetGlobalCacheVersion"
				{
					type "sym"
					sym  "_ZNK17CAttributeManager21GetGlobalCacheVersionEv"
				}
				"CAttributeManager::ClearCache"
				{
					type "sym"
					sym  "_ZN17CAttributeManager10ClearCacheEv"
				}
				"CAttributeManager::~CAttributeManager [D2]"
				{
					type "sym"
					sym  "_ZN17CAttributeManagerD2Ev"
				}
				"CAttributeManager::~CAttributeManager [D0]"
				{
					type "sym"
					sym  "_ZN17CAttributeManagerD0Ev"
				}
				"CAttributeManager::ApplyAttributeFloat"
				{
					type "sym"
					sym  "_ZN17CAttributeManager19ApplyAttributeFloatEfP11CBaseEntity8string_tP10CUtlVectorIS1_10CUtlMemoryIS1_iEE"
				}
				"CEconEntity::UpdateOnRemove"
				{
					type "sym"
					sym  "_ZN11CEconEntity14UpdateOnRemoveEv"
				}
				"SV_PackEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZL13SV_PackEntityiP7edict_tP11ServerClassP14CFrameSnapshot"
				}
				"CEngine::Frame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN7CEngine5FrameEv"
				}
				"_Host_RunFrame_Server"
				{
					type "sym"
					lib  "engine"
					sym  "_Z21_Host_RunFrame_Serverb"
				}
				"_Host_RunFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_Z14_Host_RunFramef"
				}
				"CBaseAnimating::RefreshCollisionBounds"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating22RefreshCollisionBoundsEv"
				}
				"CCollisionProperty::SetSurroundingBoundsType"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty24SetSurroundingBoundsTypeE23SurroundingBoundsType_tPK6VectorS3_"
				}
				"FX_FireBullets"
				{
					type "sym"
					sym  "_Z14FX_FireBulletsP13CTFWeaponBaseiRK6VectorRK6QAngleiiiffb"
				}
				"FindAttribute_UnsafeBitwiseCast<uint, float, CAttributeList>"
				{
					type "sym"
					sym  "_Z31FindAttribute_UnsafeBitwiseCastIjf14CAttributeListEbPKT1_PK28CEconItemAttributeDefinitionPT0_"
				}
				"FindAttribute_UnsafeBitwiseCast<uint, float, CTFItemDefinition>"
				{
					type "sym"
					sym  "_Z31FindAttribute_UnsafeBitwiseCastIjf17CTFItemDefinitionEbPKT1_PK28CEconItemAttributeDefinitionPT0_"
				}
				"CCollisionProperty::MarkPartitionHandleDirty"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty24MarkPartitionHandleDirtyEv"
				}
				"INextBotComponent::GetBot"
				{
					type "sym"
					sym  "_ZNK17INextBotComponent6GetBotEv"
				}
				"CTFGameRules::GetKillingWeaponName"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20GetKillingWeaponNameERK15CTakeDamageInfoP9CTFPlayerPi"
				}
				"CUpgrades::Spawn"
				{
					type "sym"
					sym  "_ZN9CUpgrades5SpawnEv"
				}
				"CTFGrenadePipebombProjectile::IsDeflectable"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile13IsDeflectableEv"
				}
				"CTFProjectile_Arrow::IsDeflectable"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow13IsDeflectableEv"
				}
				"CTFProjectile_Flare::IsDeflectable"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Flare13IsDeflectableEv"
				}
				"CTFProjectile_EnergyBall::IsDeflectable"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyBall13IsDeflectableEv"
				}
				"CHLTVServer::IsTVRelay"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer9IsTVRelayEv"
				}
				"CTFPlayerShared::OnAddHalloweenTiny"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared18OnAddHalloweenTinyEv"
				}
				"CTFPlayerShared::OnRemoveHalloweenTiny"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared21OnRemoveHalloweenTinyEv"
				}
				"CBaseTrigger::InputStartTouch"
				{
					type "sym"
					sym  "_ZN12CBaseTrigger15InputStartTouchER11inputdata_t"
				}
				"CBaseTrigger::InputEndTouch"
				{
					type "sym"
					sym  "_ZN12CBaseTrigger13InputEndTouchER11inputdata_t"
				}
				"CBaseFilter::PassesFilter"
				{
					type "sym"
					sym  "_ZN11CBaseFilter12PassesFilterEP11CBaseEntityS1_"
				}
				"CBaseFilter::InputTestActivator"
				{
					type "sym"
					sym  "_ZN11CBaseFilter18InputTestActivatorER11inputdata_t"
				}
				"CTFSniperRifle::SniperRifleChargeRateMod"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle24SniperRifleChargeRateModEv"
				}
				"CTFSniperRifle::ApplyChargeSpeedModifications"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle29ApplyChargeSpeedModificationsERf"
				}
				"CTFProjectile_MechanicalArmOrb::CheckForProjectiles"
				{
					type "sym"
					sym  "_ZN30CTFProjectile_MechanicalArmOrb19CheckForProjectilesEv"
				}
				"CServerGameDLL::SetServerHibernation"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL20SetServerHibernationEb"
				}
				"CTFGCServerSystem::SetHibernation"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem14SetHibernationEb"
				}
				"CTFBaseRocket::CheckForStunOnImpact"
				{
					type "sym"
					sym  "_ZN13CTFBaseRocket20CheckForStunOnImpactEP9CTFPlayer"
				}
				"CAttributeManager::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN17CAttributeManager24OnAttributeValuesChangedEv"
				}
				"CAttributeContainer::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN19CAttributeContainer24OnAttributeValuesChangedEv"
				}
				"CAttributeContainerPlayer::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN25CAttributeContainerPlayer24OnAttributeValuesChangedEv"
				}
				"CTFPlayerShared::OnAddBalloonHead"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared16OnAddBalloonHeadEv"
				}
				"CTFPointWeaponMimic::~CTFPointWeaponMimic [D0]"
				{
					type "sym"
					sym  "_ZN19CTFPointWeaponMimicD0Ev"
				}
				"CTFPointWeaponMimic::~CTFPointWeaponMimic [D2]"
				{
					type "sym"
					sym  "_ZN19CTFPointWeaponMimicD2Ev"
				}
				"TE_MetalSparks"
				{
					type "sym"
					sym  "_Z14TE_MetalSparksR16IRecipientFilterfPK6VectorS3_"
				}
				"CTFProjectile_BallOfFire::RocketTouch"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_BallOfFire11RocketTouchEP11CBaseEntity"
				}
				"CTFGameRules::CleanUpMap"
				{
					type "sym"
					sym  "_ZN12CTFGameRules10CleanUpMapEv"
				}
				"CGameUI::Deactivate"
				{
					type "sym"
					sym  "_ZN7CGameUI10DeactivateEP11CBaseEntity"
				}
				"CBaseEntityOutput::FireOutput"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput10FireOutputE9variant_tP11CBaseEntityS2_f"
				}
				"CRC_File"
				{
					type "sym"
					lib  "engine"
					sym  "_Z8CRC_FilePjPKc"
				}
				"CTFMedigunShield::RemoveShield"
				{
					type "sym"
					sym  "_ZN16CTFMedigunShield12RemoveShieldEv"
				}
				"CTFMedigunShield::UpdateShieldPosition"
				{
					type "sym"
					sym  "_ZN16CTFMedigunShield20UpdateShieldPositionEv"
				}
				"CTFMedigunShield::ShieldThink"
				{
					type "sym"
					sym  "_ZN16CTFMedigunShield11ShieldThinkEv"
				}
				"UTIL_PlayerDecalTrace"
				{
					type "sym"
					sym  "_Z21UTIL_PlayerDecalTraceP10CGameTracei"
				}
				"TE_PlayerDecal"
				{
					type "sym"
					sym  "_Z14TE_PlayerDecalR16IRecipientFilterfPK6Vectorii"
				}
				"CBaseClient::FillUserInfo"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient12FillUserInfoER13player_info_s"
				}
				"CBaseServer::UserInfoChanged"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer15UserInfoChangedEi"
				}
				"GetClassIndexFromString"
				{
					type "sym"
					sym  "_Z23GetClassIndexFromStringPKci"
				}
				"CTFWearable::Equip"
				{
					type "sym"
					sym  "_ZN11CTFWearable5EquipEP11CBasePlayer"
				}
				"CBaseAnimating::GetNumBones"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating11GetNumBonesEv"
				}
				"CObjectSentrygun::MakeScaledBuilding"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun18MakeScaledBuildingEP9CTFPlayer"
				}
				"CParallelProcessor<PackWork_t>::Run"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN18CParallelProcessorI10PackWork_t21CFuncJobItemProcessorIS0_EE3RunEPS0_jiP11IThreadPool"
				}
				"CFrameSnapshotManager::GetPreviouslySentPacket"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager23GetPreviouslySentPacketEii"
				}
				"CVEngineServer::GetChangeAccessor"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN14CVEngineServer17GetChangeAccessorEPK7edict_t"
				}
				"PackWork_t::Process"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN10PackWork_t7ProcessERS_"
				}
				"CFrameSnapshotManager::UsePreviouslySentPacket"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager23UsePreviouslySentPacketEP14CFrameSnapshotii"
				}
				"CFrameSnapshotManager::CreatePackedEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager18CreatePackedEntityEP14CFrameSnapshoti"
				}
				"CBaseEdict::GetChangeAccessor"
				{
					type "sym"
					sym  "_ZN10CBaseEdict17GetChangeAccessorEv"
				}
				"CHLTVDemoRecorder::StartRecording"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN17CHLTVDemoRecorder14StartRecordingEPKcb"
				}
				"CHLTVDemoRecorder::StopRecording"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN17CHLTVDemoRecorder13StopRecordingEv"
				}
				"CClientFrameManager::CountClientFrames"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager17CountClientFramesEv"
				}
				"CClientFrameManager::RemoveOldestFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager17RemoveOldestFrameEv"
				}
				"CHLTVServer::RestoreTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer11RestoreTickEi"
				}
				"SendTable_Encode"
				{
					type "sym"
					lib  "engine"
					sym  "_Z16SendTable_EncodePK9SendTablePKvP8bf_writeiP10CUtlMemoryI20CSendProxyRecipientsiEb"
				}
				"CDatatableStack::Init"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN15CDatatableStack4InitEb"
				}
				"CMultiPlayerAnimState::AddToGestureSlot"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState16AddToGestureSlotEi8Activityb"
				}
				"CAnimationLayer::StudioFrameAdvance"
				{
					type "sym"
					sym  "_ZN15CAnimationLayer18StudioFrameAdvanceEfP14CBaseAnimating"
				}
				"CBaseAnimatingOverlay::StudioFrameAdvance"
				{
					type "sym"
					sym  "_ZN21CBaseAnimatingOverlay18StudioFrameAdvanceEv"
				}
				"AllocChangeFrameList"
				{
					type "sym"
					lib  "engine"
					sym  "_Z20AllocChangeFrameListii"
				}
				"CMultiPlayerAnimState::RestartGesture"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState14RestartGestureEi8Activityb"
				}
				"PackEntities_Normal"
				{
					type "sym"
					lib  "engine"
					sym  "_Z19PackEntities_NormaliPP11CGameClientP14CFrameSnapshot"
				}
				"CAttributeManager::ClearCache [clone]"
				{
					type "sym regex"
					sym  "_ZN17CAttributeManager10ClearCacheEv\\.part\\..*"
				}
				"SV_EnsureInstanceBaseline"
				{
					type "sym"
					lib  "engine"
					sym  "_Z25SV_EnsureInstanceBaselineP11ServerClassiPKvi"
				}
				"PackedEntity::GetPropsChangedAfterTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN12PackedEntity24GetPropsChangedAfterTickEiPii"
				}
				"SendTable_WriteAllDeltaProps"
				{
					type "sym"
					lib  "engine"
					sym  "_Z28SendTable_WriteAllDeltaPropsPK9SendTablePKviS3_iiP8bf_write"
				}
				"SendTable_WritePropList"
				{
					type "sym"
					lib  "engine"
					sym  "_Z23SendTable_WritePropListPK9SendTablePKviP8bf_writeiPKii"
				}
				"CBaseServer::WriteDeltaEntities"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer18WriteDeltaEntitiesEP11CBaseClientP12CClientFrameS3_R8bf_write"
				}
				"CBaseServer::UncompressPackedEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer22UncompressPackedEntityEP12PackedEntityRi"
				}
				"SendTable_CullPropsFromProxies"
				{
					type "sym"
					lib  "engine"
					sym  "_Z30SendTable_CullPropsFromProxiesPK9SendTablePKiiiPK20CSendProxyRecipientsiS6_iPii"
				}
				"CCommandBuffer::AddText"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN14CCommandBuffer7AddTextEPKci"
				}
				"CHLTVServer::UpdateTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer10UpdateTickEv"
				}
				"CNetworkStringTableContainer::EnableRollback"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN28CNetworkStringTableContainer14EnableRollbackEb"
				}
				"CNetworkStringTable::RestoreTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CNetworkStringTable11RestoreTickEi"
				}
				"CNetworkStringTable::UpdateMirrorTable"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CNetworkStringTable17UpdateMirrorTableEi"
				}
				"CObjectTeleporter::PlayerCanBeTeleported"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter21PlayerCanBeTeleportedEP9CTFPlayer"
				}
				"SendProxy_SendHealersDataTable"
				{
					type "sym"
					sym  "_Z30SendProxy_SendHealersDataTablePK8SendPropPKvS3_P20CSendProxyRecipientsi"
				}
				"SendProxy_SendPredictableId"
				{
					type "sym"
					sym  "_ZL27SendProxy_SendPredictableIdPK8SendPropPKvS3_P20CSendProxyRecipientsi_0"
				}
				"CObjectTeleporter::TeleporterTouch"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter15TeleporterTouchEP11CBaseEntity"
				}
				"CWeaponMedigun::GetTargetRange"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun14GetTargetRangeEv"
				}
				"CTFBotSquad::Leave"
				{
					type "sym"
					sym  "_ZN11CTFBotSquad5LeaveEP6CTFBot"
				}
				"CTFBotSquad::ShouldSquadLeaderWaitForFormation"
				{
					type "sym"
					sym  "_ZNK11CTFBotSquad33ShouldSquadLeaderWaitForFormationEv"
				}
				"CCaptureFlag::Drop"
				{
					type "sym"
					sym  "_ZN12CCaptureFlag4DropEP9CTFPlayerbbb"
				}
				"CTFSpellBook::RollNewSpell"
				{
					type "sym"
					sym  "_ZN12CTFSpellBook12RollNewSpellEib"
				}
				"CTFSpellBook::SetSelectedSpell"
				{
					type "sym"
					sym  "_ZN12CTFSpellBook16SetSelectedSpellEi"
				}
				"CTFProjectile_BallOfFire::Burn"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_BallOfFire4BurnEP11CBaseEntity"
				}
				"CTFProjectile_EnergyRing::ProjectileTouch"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyRing15ProjectileTouchEP11CBaseEntity"
				}
				"CTFFlameManager::ShouldCollide"
				{
					type "sym"
					sym  "_ZNK15CTFFlameManager13ShouldCollideEP11CBaseEntity"
				}
				"CTFFlameManager::BCanBurnEntityThisFrame"
				{
					type "sym"
					sym  "_ZNK15CTFFlameManager23BCanBurnEntityThisFrameEP11CBaseEntity"
				}
				
				"CTFPlayerShared::PulseRageBuff"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared13PulseRageBuffENS_13ERageBuffSlotE"
				}
				"CTFSodaPopper::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN13CTFSodaPopper15SecondaryAttackEv"
				}
				"JarExplode"
				{
					type "sym"
					sym  "_Z10JarExplodeiP9CTFPlayerP11CBaseEntityS2_RK6Vectorif7ETFCondfPKcS8_"
				}
				"CTFFlareGun_Revenge::Deploy"
				{
					type "sym"
					sym  "_ZN19CTFFlareGun_Revenge6DeployEv"
				}
				"CTFShotgun_Revenge::Deploy"
				{
					type "sym"
					sym  "_ZN18CTFShotgun_Revenge6DeployEv"
				}
				"CTFRevolver::Deploy"
				{
					type "sym"
					sym  "_ZN11CTFRevolver6DeployEv"
				}
				"CTFFlareGun_Revenge::Holster"
				{
					type "sym"
					sym  "_ZN19CTFFlareGun_Revenge7HolsterEP17CBaseCombatWeapon"
				}
				"CTFShotgun_Revenge::Holster"
				{
					type "sym"
					sym  "_ZN18CTFShotgun_Revenge7HolsterEP17CBaseCombatWeapon"
				}
				"CTFRevolver::Holster"
				{
					type "sym"
					sym  "_ZN11CTFRevolver7HolsterEP17CBaseCombatWeapon"
				}
				"CTFChargedSMG::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN13CTFChargedSMG15SecondaryAttackEv"
				}
				"CTFInventoryManager::GetBaseItemForClass"
				{
					type "sym"
					sym  "_ZN19CTFInventoryManager19GetBaseItemForClassEii"
				}
				"CTFGasManager::OnCollide"
				{
					type "sym"
					sym  "_ZN13CTFGasManager9OnCollideEP11CBaseEntityi"
				}
				"CTFAmmoPack::InitAmmoPack"
				{
					type "sym"
					sym  "_ZN11CTFAmmoPack12InitAmmoPackEP9CTFPlayerP13CTFWeaponBaseibbf"
				}
				"CTFPowerup::DropSingleInstance"
				{
					type "sym"
					sym  "_ZN10CTFPowerup18DropSingleInstanceER6VectorP20CBaseCombatCharacterff"
				}
				"CTFBaseProjectile::GetDamage"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile9GetDamageEv"
				}
				"CPlayerInventory::GetItemByPosition"
				{
					type "sym"
					sym  "_ZN16CPlayerInventory17GetItemByPositionEiPi"
				}
				"CheckChatText"
				{
					type "sym"
					sym  "_Z13CheckChatTextP11CBasePlayerPc"
				}
				"Host_Say"
				{
					type "sym"
					sym  "_Z8Host_SayP7edict_tRK8CCommandb"
				}
				"CEconItemView::IterateAttributes"
				{
					type "sym"
					sym  "_ZNK13CEconItemView17IterateAttributesEP26IEconItemAttributeIterator"
				}
				"CObjectDispenser::DispenseMetal"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser13DispenseMetalEP9CTFPlayer"
				}
				"CBaseAnimating::SetModel"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating8SetModelEPKc"
				}
				"CTeam::RemovePlayer"
				{
					type "sym"
					sym  "_ZN5CTeam12RemovePlayerEP11CBasePlayer"
				}
				"CEyeballBossApproachTarget::Update"
				{
					type "sym"
					sym  "_ZN26CEyeballBossApproachTarget6UpdateEP12CEyeballBossf"
				}
				"CEyeballBossLaunchRockets::Update"
				{
					type "sym"
					sym  "_ZN25CEyeballBossLaunchRockets6UpdateEP12CEyeballBossf"
				}
				"CTFGrenadePipebombProjectile::StickybombTouch"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile15StickybombTouchEP11CBaseEntity"
				}
				"CZombie::OnTakeDamage_Alive"
				{
					type "sym"
					sym  "_ZN7CZombie18OnTakeDamage_AliveERK15CTakeDamageInfo"
				}
				"CTFWeaponBaseGrenadeProj::SetDetonateTimerLength"
				{
					type "sym"
					sym  "_ZN24CTFWeaponBaseGrenadeProj22SetDetonateTimerLengthEf"
				}
				"CBaseTrigger::StartTouch"
				{
					type "sym"
					sym  "_ZN12CBaseTrigger10StartTouchEP11CBaseEntity"
				}
				"CBaseTrigger::EndTouch"
				{
					type "sym"
					sym  "_ZN12CBaseTrigger8EndTouchEP11CBaseEntity"
				}
				"CTFPointWeaponMimic::GetFiringAngles"
				{
					type "sym"
					sym  "_ZNK19CTFPointWeaponMimic15GetFiringAnglesEv"
				}
				"CTriggerHurt::HurtEntity"
				{
					type "sym"
					sym  "_ZN12CTriggerHurt10HurtEntityEP11CBaseEntityf"
				}
				"CHLTVClient::ExecuteStringCommand"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVClient20ExecuteStringCommandEPKc"
				}
				"CHLTVClient::SpawnPlayer"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVClient11SpawnPlayerEv"
				}
				"CHLTVServer::ConnectClient"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer13ConnectClientER8netadr_siiiiPKcS3_S3_i"
				}
				"CTFGameRules::BetweenRounds_Think"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19BetweenRounds_ThinkEv"
				}
				"CSchemaAttributeType_Default::ConvertStringToEconAttributeValue"
				{
					type "sym"
					sym  "_ZNK28CSchemaAttributeType_Default34BConvertStringToEconAttributeValueEPK28CEconItemAttributeDefinitionPKcP22attribute_data_union_tb"
				}
				"CHeadlessHatman::OnTakeDamage_Alive"
				{
					type "sym"
					sym  "_ZN15CHeadlessHatman18OnTakeDamage_AliveERK15CTakeDamageInfo"
				}
				"CHeadlessHatman::Spawn"
				{
					type "sym"
					sym  "_ZN15CHeadlessHatman5SpawnEv"
				}
				"CHeadlessHatman [D2]"
				{
					type "sym"
					sym  "_ZN15CHeadlessHatmanD2Ev"
				}
				"SpawnHierarchicalList"
				{
					type "sym"
					sym  "_Z21SpawnHierarchicalListiP19HierarchicalSpawn_tb"
				}
				"NextBotCombatCharacter [D0]"
				{
					type "sym"
					sym  "_ZN22NextBotCombatCharacterD0Ev"
				}
				"NextBotCombatCharacter [D2]"
				{
					type "sym"
					sym  "_ZN22NextBotCombatCharacterD2Ev"
				}
				"CCollisionProperty::SetSolidFlags"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty13SetSolidFlagsEi"
				}
				"CTFPointWeaponMimic::Spawn"
				{
					type "sym"
					sym  "_ZN19CTFPointWeaponMimic5SpawnEv"
				}
				"CGlobalEntityList::FindEntityByName"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList16FindEntityByNameEP11CBaseEntityPKcS1_S1_S1_P17IEntityFindFilter"
				}
				"CHeadlessHatmanAttack::RecomputeHomePosition"
				{
					type "sym"
					sym  "_ZN21CHeadlessHatmanAttack21RecomputeHomePositionEv"
				}
				"TE_TFBlood"
				{
					type "sym"
					sym  "_Z10TE_TFBloodR16IRecipientFilterfRK6VectorS3_i"
				}
				
				"CEngineSoundServer::PrecacheSound"
				{
					lib "engine"
					type "sym"
					sym  "_ZN18CEngineSoundServer13PrecacheSoundEPKcbb"
				}
				"CObjectSentrygun::FirstSpawn"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun10FirstSpawnEv"
				}
				"CTFMinigun::WindUp"
				{
					type "sym"
					sym  "_ZN10CTFMinigun6WindUpEv"
				}
				"CTFMinigun::WindDown"
				{
					type "sym"
					sym  "_ZN10CTFMinigun8WindDownEv"
				}
				"UTIL_ParticleTracer"
				{
					type "sym"
					sym  "_Z19UTIL_ParticleTracerPKcRK6VectorS3_iib"
				}
				"CalculateMeleeDamageForce"
				{
					type "sym"
					sym  "_Z25CalculateMeleeDamageForceP15CTakeDamageInfoRK6VectorS3_f"
				}
				"CHeadlessHatmanAttack::AttackTarget"
				{
					type "sym"
					sym  "_ZN21CHeadlessHatmanAttack12AttackTargetEP15CHeadlessHatmanP20CBaseCombatCharacterf"
				}
				"CTFDroppedWeapon::InitDroppedWeapon"
				{
					type "sym"
					sym  "_ZN16CTFDroppedWeapon17InitDroppedWeaponEP9CTFPlayerP13CTFWeaponBasebb"
				}
				"CTFMinigun::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN10CTFMinigun13ItemPostFrameEv"
				}
				"CTFMinigun::SetWeaponState"
				{
					type "sym"
					sym  "_ZN10CTFMinigun14SetWeaponStateE14MinigunState_t"
				}
				"CTFFlameThrower::SetWeaponState"
				{
					type "sym regex"
					sym  "_ZN15CTFFlameThrower14SetWeaponStateEi\\.part\\..*"
				}
				"CTriggerCamera::Enable"
				{
					type "sym"
					sym  "_ZN14CTriggerCamera6EnableEv"
				}
				"CTriggerCamera::Disable"
				{
					type "sym"
					sym  "_ZN14CTriggerCamera7DisableEv"
				}
				"CTFProjectile_Arrow::FadeOut"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow7FadeOutEi"
				}
				"CTFProjectile_Arrow::CheckSkyboxImpact"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow17CheckSkyboxImpactEP11CBaseEntity"
				}
				"CTFBaseBoss::Touch"
				{
					type "sym"
					sym  "_ZN11CTFBaseBoss5TouchEP11CBaseEntity"
				}
				"ParseKeyvalue"
				{
					type "sym"
					sym  "_Z13ParseKeyvaluePvP17typedescription_tiPKcS3_"
				}
				"CBaseEntityOutput::ParseEventAction"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput16ParseEventActionEPKc"
				}
				"CTFBaseRocket::RocketTouch"
				{
					type "sym"
					sym  "_ZN13CTFBaseRocket11RocketTouchEP11CBaseEntity"
				}
				"CBaseProjectile::GetCollideWithTeammatesDelay"
				{
					type "sym"
					sym  "_ZNK15CBaseProjectile28GetCollideWithTeammatesDelayEv"
				}
				"variant_t::Set"
				{
					type "sym"
					sym  "_ZN9variant_t3SetE11_fieldtypesPv"
				}
				"variant_t::SetOther"
				{
					type "sym"
					sym  "_ZN9variant_t8SetOtherEPv"
				}
				"variant_t::Convert"
				{
					type "sym"
					sym  "_ZN9variant_t7ConvertE11_fieldtypes"
				}
				"CreateSpellSpawnZombie"
				{
					type "sym"
					sym  "_Z22CreateSpellSpawnZombieP20CBaseCombatCharacterRK6Vectori"
				}
				"ENTINDEX"
				{
					type "sym"
					sym  "_Z8ENTINDEXP11CBaseEntity"
				}
				"CTraceFilterSimple::CTraceFilterSimple"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimpleC2EPK13IHandleEntityiPFbPS0_iE"
				}
				"CTFGameMovement::PlayerSolidMask"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15PlayerSolidMaskEb"
				}
				"CBaseFilter::PassesFilterImpl"
				{
					type "sym"
					sym  "_ZN11CBaseFilter16PassesFilterImplEP11CBaseEntityS1_"
				}
				"CMannVsMachineChangeChallengeIssue::ExecuteCommand"
				{
					type "sym"
					sym  "_ZN34CMannVsMachineChangeChallengeIssue14ExecuteCommandEv"
				}
				"CTFGameRules::LoadMapCycleFile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16LoadMapCycleFileEv"
				}
				"~CTriggerCamera [D0]"
				{
					type "sym"
					sym  "_ZN14CTriggerCameraD0Ev"
				}
				"~CTriggerCamera [D2]"
				{
					type "sym"
					sym  "_ZN14CTriggerCameraD2Ev"
				}
				
				"~CBaseEntity [D2]"
				{
					type "sym"
					sym  "_ZN11CBaseEntityD2Ev"
				}
				"IDroppedWeaponAutoList::m_IDroppedWeaponAutoListAutoList"
				{
					type "sym"
					sym  "_ZN22IDroppedWeaponAutoList32m_IDroppedWeaponAutoListAutoListE"
				}
				"CTFPlayerInventory::GetItemInLoadout"
				{
					type "sym"
					sym  "_ZN18CTFPlayerInventory16GetItemInLoadoutEii"
				}
				"UTIL_PlayerBySteamID"
				{
					type "sym"
					sym  "_Z20UTIL_PlayerBySteamIDRK8CSteamID"
				}
				"CPopulationManager::IsValidPopfile"
				{
					type "sym"
					sym  "_ZN18CPopulationManager14IsValidPopfileE10CUtlString"
				} 
				"CCollisionProperty::SetCollisionBounds"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty18SetCollisionBoundsERK6VectorS2_"
				}  
				"UTIL_StringToVector"
				{
					type "sym"
					sym  "_Z19UTIL_StringToVectorPfPKc"
				}
				"CCollisionProperty::SetSolid"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty8SetSolidE11SolidType_t"
				}
				"CFuncRotating::InputStartForward"
				{
					type "sym"
					sym  "_ZN13CFuncRotating17InputStartForwardER11inputdata_t"
				}
				"CFuncRotating::InputStartBackward"
				{
					type "sym"
					sym  "_ZN13CFuncRotating18InputStartBackwardER11inputdata_t"
				}
				"CFuncRotating::InputStop"
				{
					type "sym"
					sym  "_ZN13CFuncRotating9InputStopER11inputdata_t"
				}
				"CFuncRotating::SetTargetSpeed"
				{
					type "sym"
					sym  "_ZN13CFuncRotating14SetTargetSpeedEf"
				}
				"CBaseTrigger::Activate"
				{
					type "sym"
					sym  "_ZN12CBaseTrigger8ActivateEv"
				}
				"CPointTeleport::Activate"
				{
					type "sym"
					sym  "_ZN14CPointTeleport8ActivateEv"
				}
				"CGameStringPool::LevelShutdownPostEntity"
				{
					type "sym"
					sym  "_ZN15CGameStringPool23LevelShutdownPostEntityEv"
				}
				"CEconItemView::GetPlayerDisplayModel"
				{
					type "sym"
					sym  "_ZNK13CEconItemView21GetPlayerDisplayModelEii"
				}
				"CTFDroppedWeapon::InitPickedUpWeapon"
				{
					type "sym"
					sym  "_ZN16CTFDroppedWeapon18InitPickedUpWeaponEP9CTFPlayerP13CTFWeaponBase"
				}
				"CBaseAnimating::GetAttachment"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating13GetAttachmentEiR6VectorR6QAngle"
				}
				"CBaseAnimating::GetAttachmentBone"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating17GetAttachmentBoneEi"
				}
				
				"CBaseAnimating::GetAttachment [matrix]"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating13GetAttachmentEiR11matrix3x4_t"
				}
				"CBaseFilter::PassesDamageFilter"
				{
					type "sym"
					sym  "_ZN11CBaseFilter18PassesDamageFilterERK15CTakeDamageInfo"
				}
				"CBaseFilter::PassesDamageFilterImpl"
				{
					type "sym"
					sym  "_ZN11CBaseFilter22PassesDamageFilterImplERK15CTakeDamageInfo"
				}
				"CBaseAnimating::StudioFrameAdvance"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating18StudioFrameAdvanceEv"
				}
				"CBaseServerVehicle::HandleEntryExitFinish"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle21HandleEntryExitFinishEbb"
				}
				"CPlayerMove::SetupMove"
				{
					type "sym"
					sym  "_ZN11CPlayerMove9SetupMoveEP11CBasePlayerP8CUserCmdP11IMoveHelperP9CMoveData"
				}
				
				"CBaseServerVehicle::SetupMove"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle9SetupMoveEP11CBasePlayerP8CUserCmdP11IMoveHelperP9CMoveData"
				}
				"CBaseServerVehicle::GetExitAnimToUse"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle16GetExitAnimToUseER6VectorRb"
				}
				"CPropVehicleDriveable::CanExitVehicle"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable14CanExitVehicleEP11CBaseEntity"
				}
				"CBaseServerVehicle::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle13ItemPostFrameEP11CBasePlayer"
				}
				"CPropVehicleDriveable::Use"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable3UseEP11CBaseEntityS1_8USE_TYPEf"
				}
				"CBaseServerVehicle::HandlePassengerEntry"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle20HandlePassengerEntryEP20CBaseCombatCharacterb"
				}
				"CBaseServerVehicle::HandlePassengerExit"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle19HandlePassengerExitEP20CBaseCombatCharacter"
				}
				"CPropVehicleDriveable::Spawn"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable5SpawnEv"
				}
				"CBaseServerVehicle::IsPassengerVisible"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle18IsPassengerVisibleEi"
				}
				"CBaseServerVehicle::GetDriver"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle9GetDriverEv"
				}
				"CBaseServerVehicle::IsPassengerUsingStandardWeapons"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle31IsPassengerUsingStandardWeaponsEi"
				}
				"CBaseServerVehicle::GetVehicleEnt"
				{
					type "sym"
					sym  "_ZN18CBaseServerVehicle13GetVehicleEntEv"
				}
				"CTFBaseProjectile::PhysicsSolidMaskForEntity"
				{
					type "sym"
					sym  "_ZNK17CTFBaseProjectile25PhysicsSolidMaskForEntityEv"
				}
				"CTFProjectile_Arrow::Spawn"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow5SpawnEv"
				}
				"CTFBaseProjectile::GetDamageType"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile13GetDamageTypeEv"
				}
				"GetPlayerClassData"
				{
					type "sym"
					sym  "_Z18GetPlayerClassDataj"
				}
				"CPropVehicleDriveable::TraceAttack"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable11TraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"
				}
				"CPropVehicleDriveable::DriveVehicle"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable12DriveVehicleEfP8CUserCmdii"
				}
				"CPropVehicleDriveable::PassengerShouldReceiveDamage"
				{
					type "sym"
					sym  "_ZN21CPropVehicleDriveable28PassengerShouldReceiveDamageER15CTakeDamageInfo"
				}
				"CalculatePhysicsImpactDamage"
				{
					type "sym"
					sym  "_Z28CalculatePhysicsImpactDamageiP21gamevcollisionevent_tRK19impactdamagetable_tfbRib"
				}
				"CBaseEntityOutput::DeleteAllElements"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput17DeleteAllElementsEv"
				}
				"InstancedScriptedScene"
				{
					type "sym"
					sym  "_Z22InstancedScriptedSceneP9CBaseFlexPKcP7CHandleI11CBaseEntityEfbP11AI_ResponsebP16IRecipientFilter"
				}
				"StopScriptedScene"
				{
					type "sym"
					sym  "_Z17StopScriptedSceneP9CBaseFlex7CHandleI11CBaseEntityE"
				}
				"CTFBaseProjectile::Spawn"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile5SpawnEv"
				}
				"CPhysicsHook::FindOrAddVehicleScript"
				{
					type "sym"
					sym  "_ZN12CPhysicsHook22FindOrAddVehicleScriptEPKcP15vehicleparams_tP15vehiclesounds_t"
				}
				"CBaseProjectile::~CBaseProjectile [D2]"
				{
					type "sym"
					sym  "_ZN15CBaseProjectileD2Ev"
				}
				"CAttributeList::NotifyManagerOfAttributeValueChanges"
				{
					type "sym"
					sym  "_ZN14CAttributeList36NotifyManagerOfAttributeValueChangesEv"
				}
				"CAttributeList::SetRuntimeAttributeRefundableCurrency"
				{
					type "sym"
					sym  "_ZN14CAttributeList37SetRuntimeAttributeRefundableCurrencyEPK28CEconItemAttributeDefinitioni"
				}
				"CEventQueue::CancelEvents"
				{
					type "sym"
					sym  "_ZN11CEventQueue12CancelEventsEP11CBaseEntity"
				}
				"V_snprintf"
				{
					type "sym"
					sym  "_Z10V_snprintfPciPKcz"
				}
				"CTFSword::GetSwordSpeedMod"
				{
					type "sym"
					sym  "_ZN8CTFSword16GetSwordSpeedModEv"
				}
				"CTFSword::GetSwordHealthMod"
				{
					type "sym"
					sym  "_ZN8CTFSword17GetSwordHealthModEv"
				}
				"CTFWearableDemoShield::DoSpecialAction"
				{
					type "sym"
					sym  "_ZN21CTFWearableDemoShield15DoSpecialActionEP9CTFPlayer"
				}
				"CTFMinigun::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN10CTFMinigun15SecondaryAttackEv"
				}
				"CTFFists::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN8CTFFists15SecondaryAttackEv"
				}
				"CTFFists::Punch"
				{
					type "sym"
					sym  "_ZN8CTFFists5PunchEv"
				}
				"CTFWearableDemoShield::EndSpecialAction"
				{
					type "sym"
					sym  "_ZN21CTFWearableDemoShield16EndSpecialActionEP9CTFPlayer"
				}
				"ClassCanBuild"
				{
					type "sym"
					sym  "_Z13ClassCanBuildii"
				}
				"CTFWeaponBuilder::GetViewModel"
				{
					type "sym"
					sym  "_ZNK16CTFWeaponBuilder12GetViewModelEi"
				}
				"CTFWeaponBuilder::SetSubType"
				{
					type "sym"
					sym  "_ZN16CTFWeaponBuilder10SetSubTypeEi"
				}
				"CTFWeaponBuilder::CanDeploy"
				{
					type "sym"
					sym  "_ZN16CTFWeaponBuilder9CanDeployEv"
				}
				"CLaserDot::Create"
				{
					type "sym"
					sym  "_ZN9CLaserDot6CreateERK6VectorP11CBaseEntityb"
				}
				"CSniperDot::Create"
				{
					type "sym"
					sym  "_ZN10CSniperDot6CreateERK6VectorP11CBaseEntityb"
				}
				"findFileInDirCaseInsensitive"
				{
					type "sym"
					lib "dedicated"
					sym  "_Z28findFileInDirCaseInsensitivePKcPcj"
				}
				"CWeaponMedigun::RemoveHealingTarget"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun19RemoveHealingTargetEb"
				}
				"CWeaponMedigun::StartHealingTarget"
				{
					type "sym"
					sym  "_ZN14CWeaponMedigun18StartHealingTargetEP11CBaseEntity"
				}
				"CVoteController::IsValidVoter"
				{
					type "sym"
					sym  "_ZN15CVoteController12IsValidVoterEP11CBasePlayer"
				}
				"CUpgrades::~CUpgrades [D2]"
				{
					type "sym"
					sym  "_ZN9CUpgradesD2Ev"
				}
				"CUpgrades::~CUpgrades [D0]"
				{
					type "sym"
					sym  "_ZN9CUpgradesD0Ev"
				}
				"CTFBaseBoss::ResolvePlayerCollision"
				{
					type "sym"
					sym  "_ZN11CTFBaseBoss22ResolvePlayerCollisionEP9CTFPlayer"
				}
				"GetParticleSystemNameFromIndex"
				{
					type "sym"
					sym  "_Z30GetParticleSystemNameFromIndexi"
				}
				"CEventQueue::AddEvent [CBaseEntity]"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEP11CBaseEntityPKc9variant_tfS1_S1_i"
				}
				"CUpgrades::EndTouch"
				{
					type "sym"
					sym  "_ZN9CUpgrades8EndTouchEP11CBaseEntity"
				}
				"CM_EntityString"
				{
					type "sym"
					lib "engine"
					sym  "_Z15CM_EntityStringv"
				}
				"CServerGameDLL::LevelInit"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL9LevelInitEPKcS1_S1_S1_bb"
				}
				"CSpawnLocation::FindSpawnLocation"
				{
					type "sym"
					sym  "_ZN14CSpawnLocation17FindSpawnLocationER6Vector"
				}
				"CSoundEmitterSystemBase::AddSoundsFromFile"
				{
					type "sym"
					lib "soundemittersystem"
					sym  "_ZN23CSoundEmitterSystemBase17AddSoundsFromFileEPKcbbb"
				}
				"CSoundEmitterSystemBase::InitSoundInternalParameters"
				{
					type "sym"
					lib "soundemittersystem"
					sym  "_ZN23CSoundEmitterSystemBase27InitSoundInternalParametersEPKcP9KeyValuesR24CSoundParametersInternal"
				}
				"CTFProjectile_EnergyBall::Explode"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyBall7ExplodeEP10CGameTraceP11CBaseEntity"
				}
				"CObjectSentrygun::Attack"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun6AttackEv"
				}
				"CEventAction::CEventAction [C2]"
				{
					type "sym"
					sym  "_ZN12CEventActionC2EPKc"
				}
				"CTFStunBall::ApplyBallImpactEffectOnVictim"
				{
					type "sym"
					sym  "_ZN11CTFStunBall29ApplyBallImpactEffectOnVictimEP11CBaseEntity"
				}
				"CQuestItemTracker::FireGameEvent"
				{
					type "sym"
					sym  "_ZN17CQuestItemTracker13FireGameEventEP10IGameEvent"
				}
				"CBaseServer::GetCPUUsage"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer11GetCPUUsageEv"
				}
				"CGlobalEntityList::NumberOfEntities"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList16NumberOfEntitiesEv"
				}
				"CTFGameMovement::ToggleParachute"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15ToggleParachuteEv"
				}
				"CTFGameMovement::HandleDuckingSpeedCrop"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement22HandleDuckingSpeedCropEv"
				}
				"CTFProjectile_EnergyRing::ShouldPenetrate"
				{
					type "sym"
					sym  "_ZNK24CTFProjectile_EnergyRing15ShouldPenetrateEv"
				}
				"CAttributeManager::ProvideTo"
				{
					type "sym"
					sym  "_ZN17CAttributeManager9ProvideToEP11CBaseEntity"
				}
				"CAttributeManager::StopProvidingTo"
				{
					type "sym"
					sym  "_ZN17CAttributeManager15StopProvidingToEP11CBaseEntity"
				}
				"CTFProjectile_EnergyRing::Create"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyRing6CreateEP16CTFWeaponBaseGunRK6VectorRK6QAngleffP11CBaseEntityS9_S2_S2_b"
				}
				"CServerGameClients::GetPlayerLimits"
				{
					type "sym"
					sym  "_ZNK18CServerGameClients15GetPlayerLimitsERiS0_S0_"
				}
				"CBaseServer::GetFreeClient"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer13GetFreeClientER8netadr_s"
				}
				"CBaseServer::CreateNewClient"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer15CreateNewClientEi"
				}
				"SV_ActivateServer"
				{
					type "sym"
					lib "engine"
					sym  "_Z17SV_ActivateServerv"
				}
				"CFuncIllusionary::Spawn"
				{
					type "sym"
					sym  "_ZN16CFuncIllusionary5SpawnEv"
				}
				"SetupMaxPlayers"
				{
					type "sym"
					lib "engine"
					sym  "_Z15SetupMaxPlayersi"
				}
				"Host_Changelevel"
				{
					type "sym"
					lib "engine"
					sym  "_Z16Host_ChangelevelbPKcS0_"
				}
				"CGameServer::SpawnServer"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CGameServer11SpawnServerEPKcS1_S1_"
				}
				"Host_NewGame"
				{
					type "sym"
					lib "engine"
					sym  "_Z12Host_NewGamePcbbPKcS1_b"
				}
				"CLagCompensationManager::FrameUpdatePostEntityThink"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager26FrameUpdatePostEntityThinkEv"
				}
				"SendProxy_PlayerList"
				{
					type "sym"
					sym  "_Z20SendProxy_PlayerListPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxyArrayLength_PlayerArray"
				{
					type "sym"
					sym  "_Z32SendProxyArrayLength_PlayerArrayPKvi"
				}
				"CTFTeam::AddPlayer"
				{
					type "sym"
					sym  "_ZN7CTFTeam9AddPlayerEP11CBasePlayer"
				}
				"CTFTeam::RemovePlayer"
				{
					type "sym"
					sym  "_ZN7CTFTeam12RemovePlayerEP11CBasePlayer"
				}
				"CCvar::FindVar"
				{
					type "sym"
					lib "vstdlib"
					sym  "_ZNK5CCvar7FindVarEPKc"
				}
				"CGameMovement::GetPointContentsCached"
				{
					type "sym"
					sym  "_ZN13CGameMovement22GetPointContentsCachedERK6Vectori"
				}
				"CTFGameRules::GetTaggedConVarList"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19GetTaggedConVarListEP9KeyValues"
				}
				"CBaseServer::RecalculateTags"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer15RecalculateTagsEv"
				}
				"CGameMovement::CheckStuck"
				{
					type "sym"
					sym  "_ZN13CGameMovement10CheckStuckEv"
				}
				"CTFGameStats::ResetPlayerStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats16ResetPlayerStatsEP9CTFPlayer"
				}
				"CTFGameStats::ResetKillHistory"
				{
					type "sym"
					sym  "_ZN12CTFGameStats16ResetKillHistoryEP9CTFPlayer"
				}
				"CTFGameStats::IncrementStat"
				{
					type "sym"
					sym  "_ZN12CTFGameStats13IncrementStatEP9CTFPlayer12TFStatType_ti"
				}
				"CTFGameStats::SendStatsToPlayer"
				{
					type "sym"
					sym  "_ZN12CTFGameStats17SendStatsToPlayerEP9CTFPlayerb"
				}
				"CTFGameStats::AccumulateAndResetPerLifeStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats30AccumulateAndResetPerLifeStatsEP9CTFPlayer"
				}
				"CTFGameStats::Event_PlayerConnected"
				{
					type "sym"
					sym  "_ZN12CTFGameStats21Event_PlayerConnectedEP11CBasePlayer"
				}
				"CTFGameStats::Event_PlayerDisconnectedTF"
				{
					type "sym"
					sym  "_ZN12CTFGameStats26Event_PlayerDisconnectedTFEP9CTFPlayer"
				}
				"CTFGameStats::Event_PlayerLeachedHealth"
				{
					type "sym"
					sym  "_ZN12CTFGameStats25Event_PlayerLeachedHealthEP9CTFPlayerbf"
				}
				"CTFGameStats::TrackKillStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats14TrackKillStatsEP11CBasePlayerS1_"
				}
				"CTFGameStats::FindPlayerStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats15FindPlayerStatsEP11CBasePlayer"
				}
				"CTFGameStats::Event_PlayerEarnedKillStreak"
				{
					type "sym"
					sym  "_ZN12CTFGameStats28Event_PlayerEarnedKillStreakEP9CTFPlayer"
				}
				"CTFPlayerResource::UpdateConnectedPlayer"
				{
					type "sym"
					sym  "_ZN17CTFPlayerResource21UpdateConnectedPlayerEiP11CBasePlayer"
				}
				"CTFPlayerResource::UpdateDisconnectedPlayer"
				{
					type "sym"
					sym  "_ZN17CTFPlayerResource24UpdateDisconnectedPlayerEi"
				}
				"CServerGameClients::ClientActive"
				{
					type "sym"
					sym  "_ZN18CServerGameClients12ClientActiveEP7edict_tb"
				}
				"ClientActive"
				{
					type "sym"
					sym  "_Z12ClientActiveP7edict_tb"
				}
				"CTFPlayerResource::SetPlayerClassWhenKilled"
				{
					type "sym"
					sym  "_ZN17CTFPlayerResource24SetPlayerClassWhenKilledEii"
				}
				"CSoundEnt::Initialize"
				{
					type "sym"
					sym  "_ZN9CSoundEnt10InitializeEv"
				}
				"CVoiceGameMgr::ClientConnected"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr15ClientConnectedEP7edict_t"
				}
				"CTFTeam::SetTeamLeader"
				{
					type "sym"
					sym  "_ZN7CTFTeam13SetTeamLeaderEP11CBasePlayer"
				}
				"CHLTVDirector::BuildActivePlayerList"
				{
					type "sym"
					sym  "_ZN13CHLTVDirector21BuildActivePlayerListEv"
				}
				"CTFGCServerSystem::ClientDisconnected"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem18ClientDisconnectedE8CSteamID"
				}
				"ConVar::GetName"
				{
					type "sym"
					sym  "_ZNK6ConVar7GetNameEv"
				}
				"CVoiceGameMgrHelper::CanPlayerHearPlayer"
				{
					type "sym"
					sym  "_ZN19CVoiceGameMgrHelper19CanPlayerHearPlayerEP11CBasePlayerS1_Rb"
				}
				"CVoiceGameMgrHelper::ClientCommand"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr13ClientCommandEP11CBasePlayerRK8CCommand"
				}
				"CTeamplayRoundBasedRules::State_Enter_PREROUND"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules20State_Enter_PREROUNDEv"
				}
				"CBaseClient::FireGameEvent"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseClient13FireGameEventEP10IGameEvent"
				}
				"ConCommandBase::GetName"
				{
					type "sym"
					sym  "_ZNK14ConCommandBase7GetNameEv"
				}
				"CTFGameRules::PowerupModeKillCountCompare"
				{
					type "sym"
					sym  "_ZN12CTFGameRules27PowerupModeKillCountCompareEv"
				}
				"CTFGameRules::PowerupModeInitKillCountTimer"
				{
					type "sym"
					sym  "_ZN12CTFGameRules29PowerupModeInitKillCountTimerEv"
				}
				"CTFGameMovement::CheckWater"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement10CheckWaterEv"
				}
				"SV_BroadcastVoiceData"
				{
					type "sym"
					lib "engine"
					sym  "_Z21SV_BroadcastVoiceDataP7IClientiPcx"
				}
				"CSteam3Server::SendUpdatedServerDetails"
				{
					type "sym"
					lib "engine"
					sym  "_ZN13CSteam3Server24SendUpdatedServerDetailsEv"
				}
				"CVoiceGameMgr::UpdateMasks"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr11UpdateMasksEv"
				}
				"CTFBot::GetNextSpawnClassname"
				{
					type "sym"
					sym  "_ZNK6CTFBot21GetNextSpawnClassnameEv"
				}
				"CTFGameRules::RoundCleanupShouldIgnore"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24RoundCleanupShouldIgnoreEP11CBaseEntity"
				}
				"CTFGameRules::ShouldCreateEntity"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18ShouldCreateEntityEPKc"
				}
				"CServerGameClients::ClientPutInServer"
				{
					type "sym"
					sym  "_ZN18CServerGameClients17ClientPutInServerEP7edict_tPKc"
				}
				"DispatchSpawn"
				{
					type "sym"
					sym  "_Z13DispatchSpawnP11CBaseEntityb"
				}
				"SendProxy_StringT_To_String"
				{
					type "sym"
					sym  "_Z27SendProxy_StringT_To_StringPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_StringToString"
				{
					type "sym"
					sym  "_Z24SendProxy_StringToStringPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_VectorXYToVectorXY"
				{
					type "sym"
					sym  "_Z28SendProxy_VectorXYToVectorXYPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_QAngles"
				{
					type "sym"
					sym  "_Z17SendProxy_QAnglesPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_Color32ToInt"
				{
					type "sym"
					sym  "_Z22SendProxy_Color32ToIntPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_EHandleToInt"
				{
					type "sym"
					sym  "_Z22SendProxy_EHandleToIntPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_IntAddOne"
				{
					type "sym"
					sym  "_Z19SendProxy_IntAddOnePK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_ShortAddOne"
				{
					type "sym"
					sym  "_Z21SendProxy_ShortAddOnePK8SendPropPKvS3_P8DVariantii"
				}
				"CTraceFilterEntity::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterEntity15ShouldHitEntityEP13IHandleEntityi"
				}
				"CCollisionEvent::ShouldCollide"
				{
					type "sym"
					sym  "_ZN15CCollisionEvent13ShouldCollideEP14IPhysicsObjectS1_PvS2_"
				}
				"CTFTankBossBody::GetSolidMask"
				{
					type "sym"
					sym  "_ZNK15CTFTankBossBody12GetSolidMaskEv"
				}
				"CNetChan::SendDatagram"
				{
					type "sym"
					lib "engine"
					sym  "_ZN8CNetChan12SendDatagramEP8bf_write"
				}
				"CTFGameRules::SendWinPanelInfo"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16SendWinPanelInfoEb"
				}
				"CTFGameRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14BroadcastSoundEiPKciP11CBasePlayer"
				}
				"UTIL_ScreenShake"
				{
					type "sym"
					sym  "_Z16UTIL_ScreenShakeRK6Vectorffff14ShakeCommand_tb"
				}
				"CTFSniperRifle::GetDamageType"
				{
					type "sym"
					sym  "_ZNK14CTFSniperRifle13GetDamageTypeEv"
				}
				"CTFSniperRifleClassic::GetDamageType"
				{
					type "sym"
					sym  "_ZNK21CTFSniperRifleClassic13GetDamageTypeEv"
				}
				"CTFSMG::GetDamageType"
				{
					type "sym"
					sym  "_ZNK6CTFSMG13GetDamageTypeEv"
				}
				"CTFRevolver::GetDamageType"
				{
					type "sym"
					sym  "_ZNK11CTFRevolver13GetDamageTypeEv"
				}
				"CTFPistol_ScoutSecondary::GetDamageType"
				{
					type "sym"
					sym  "_ZNK24CTFPistol_ScoutSecondary13GetDamageTypeEv"
				}
				"GetKilleaterWeaponFromDamageInfo"
				{
					type "sym"
					sym  "_Z32GetKilleaterWeaponFromDamageInfoPK15CTakeDamageInfo"
				}
				"CTeamplayRules::PlayerKilled"
				{
					type "sym"
					sym  "_ZN14CTeamplayRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
				}
				"CCurrencyPack::DistributedBy"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack13DistributedByEP11CBasePlayer"
				}
				"CCurrencyPack::Spawn"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack5SpawnEv"
				}
				"CQuestItemTracker::FireGameEvent_NonVirtual"
				{
					type "sym"
					sym  "_ZThn20_N17CQuestItemTracker13FireGameEventEP10IGameEvent"
				}
				"CMultiplayRules::HaveAllPlayersSpeakConceptIfAllowed"
				{
					type "sym"
					sym  "_ZN15CMultiplayRules35HaveAllPlayersSpeakConceptIfAllowedEiiPKc"
				}
				"CDynamicProp::Spawn"
				{
					type "sym"
					sym  "_ZN12CDynamicProp5SpawnEv"
				}
				"CBaseServer::GetClassBaseline"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer16GetClassBaselineEP11ServerClassPPKvPi"
				}
				"CNetworkStringTableContainer::DirectUpdate"
				{
					type "sym"
					lib "engine"
					sym  "_ZN28CNetworkStringTableContainer12DirectUpdateEi"
				}
				"CTFBat_Wood::SecondaryAttack"
				{
					type "sym"
					sym  "_ZN11CTFBat_Wood15SecondaryAttackEv"
				}
				"CTFStunBall::Create"
				{
					type "sym"
					sym  "_ZN11CTFStunBall6CreateERK6VectorRK6QAngleP11CBaseEntity"
				}
				"CTFBall_Ornament::Create"
				{
					type "sym"
					sym  "_ZN16CTFBall_Ornament6CreateERK6VectorRK6QAngleP11CBaseEntity"
				}
				"CTFWeaponBaseGrenadeProj::InitGrenade"
				{
					type "sym"
					sym  "_ZN24CTFWeaponBaseGrenadeProj11InitGrenadeERK6VectorS2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CServerNetworkProperty::AttachEdict"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty11AttachEdictEP7edict_t"
				}
				"CObjectSentrygun::ValidTargetPlayer"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun17ValidTargetPlayerEP9CTFPlayerRK6VectorS4_"
				}
				"CEntityFactory<CTFBotHint>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI10CTFBotHintE6CreateEPKc"
				}
				"CEntityFactory<CTFBotHintSentrygun>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI19CTFBotHintSentrygunE6CreateEPKc"
				}
				"CEntityFactory<CTFBotHintTeleporterExit>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI24CTFBotHintTeleporterExitE6CreateEPKc"
				}
				"CEntityFactory<CPathTrack>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI10CPathTrackE6CreateEPKc"
				}
				"CEntityFactory<CFuncNavAvoid>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI13CFuncNavAvoidE6CreateEPKc"
				}
				"CEntityFactory<CFuncNavPrefer>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI14CFuncNavPreferE6CreateEPKc"
				}
				"CEntityFactory<CFuncNavPrerequisite>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI20CFuncNavPrerequisiteE6CreateEPKc"
				}
				"CBaseAnimating::SetLightingOrigin"
				{
					type "sym"
					sym  "_ZN14CBaseAnimating17SetLightingOriginEP11CBaseEntity"
				}
				"CEntityFactory<CEnvEntityMaker>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI15CEnvEntityMakerE6CreateEPKc"
				}
				"CTFProjectile_Jar::Create"
				{
					type "sym"
					sym  "_ZN17CTFProjectile_Jar6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFProjectile_JarMilk::Create"
				{
					type "sym"
					sym  "_ZN21CTFProjectile_JarMilk6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFProjectile_Cleaver::Create"
				{
					type "sym"
					sym  "_ZN21CTFProjectile_Cleaver6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfoi"
				}
				"CTFGrenadePipebombProjectile::SetPipebombMode"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile15SetPipebombModeEi"
				}
				"CTFProjectile_Throwable::GetVelocityVector"
				{
					type "sym"
					sym  "_ZN23CTFProjectile_Throwable17GetVelocityVectorERK6VectorS2_S2_f"
				}
				"CTFProjectile_Throwable::GetAngularImpulse"
				{
					type "sym"
					sym  "_ZN23CTFProjectile_Throwable17GetAngularImpulseEv"
				}
				"CTFProjectile_JarGas::Create"
				{
					type "sym"
					sym  "_ZN20CTFProjectile_JarGas6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfo"
				}
				"CTFJar::TossJarThink"
				{
					type "sym"
					sym  "_ZN6CTFJar12TossJarThinkEv"
				}
				"GetKilleaterWeaponFromDamageInfo::CTakeDamageInfo"
				{
					type "sym"
					sym  "_Z32GetKilleaterWeaponFromDamageInfoPK15CTakeDamageInfo"
				}
				"CTFBaseProjectile::SetScorer"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile9SetScorerEP11CBaseEntity"
				}
				"CTFProjectile_Arrow::SetScorer"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow9SetScorerEP11CBaseEntity"
				}
				"CTFProjectile_EnergyBall::SetScorer"
				{
					type "sym"
					sym  "_ZN24CTFProjectile_EnergyBall9SetScorerEP11CBaseEntity"
				}
				"CTFProjectile_Flare::SetScorer"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Flare9SetScorerEP11CBaseEntity"
				}
				"CTFProjectile_Rocket::SetScorer"
				{
					type "sym"
					sym  "_ZN20CTFProjectile_Rocket9SetScorerEP11CBaseEntity"
				}
				"CBaseObject::FindSnapToBuildPos"
				{
					type "sym"
					sym  "_ZN11CBaseObject18FindSnapToBuildPosEPS_"
				}
				"CTFProjectile_ThrowableRepel::SetCustomPipebombModel"
				{
					type "sym"
					sym  "_ZN28CTFProjectile_ThrowableRepel22SetCustomPipebombModelEv"
				}
				"CBaseGrenade::SetThrower"
				{
					type "sym"
					sym  "_ZN12CBaseGrenade10SetThrowerEP20CBaseCombatCharacter"
				}
				"EconItemInterface_OnOwnerKillEaterEvent_Batched"
				{
					type "sym"
					sym  "_Z47EconItemInterface_OnOwnerKillEaterEvent_BatchedP18IEconItemInterfaceP9CTFPlayerS2_18kill_eater_event_ti"
				}
				"OnBotTeleported"
				{
					type "sym"
					sym  "_Z15OnBotTeleportedP6CTFBot"
				}
				"EconItemInterface_OnOwnerKillEaterEvent"
				{
					type "sym"
					sym  "_Z39EconItemInterface_OnOwnerKillEaterEventP18IEconItemInterfaceP9CTFPlayerS2_18kill_eater_event_ti"
				}
				"CTFGameRules::FlPlayerFallDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18FlPlayerFallDamageEP11CBasePlayer"
				}
				"CGameMovement::CheckFalling"
				{
					type "sym"
					sym  "_ZN13CGameMovement12CheckFallingEv"
				}
				"CTFWeaponInvis::ActivateInvisibilityWatch"
				{
					type "sym"
					sym  "_ZN14CTFWeaponInvis25ActivateInvisibilityWatchEv"
				}
				"CBaseViewModel::SetWeaponModel"
				{
					type "sym"
					sym  "_ZN14CBaseViewModel14SetWeaponModelEPKcP17CBaseCombatWeapon"
				}
				"CBaseViewModel::SpawnControlPanels"
				{
					type "sym"
					sym  "_ZN14CBaseViewModel18SpawnControlPanelsEv"
				}
				"CBaseViewModel::SetControlPanelsActive"
				{
					type "sym"
					sym  "_ZN14CBaseViewModel22SetControlPanelsActiveEb"
				}
				"CTFWeaponInvis::GetViewModel"
				{
					type "sym"
					sym  "_ZNK14CTFWeaponInvis12GetViewModelEi"
				}
				"CTFGameRules::CanPlayerUseRespec"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18CanPlayerUseRespecEP9CTFPlayer"
				}
				"CTFWearableDemoShield::DoCharge"
				{
					type "sym"
					sym  "_ZN21CTFWearableDemoShield8DoChargeEP9CTFPlayer"
				}
				"CTFGameRules::IsCompetitiveMode"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules17IsCompetitiveModeEv"
				}
				"CVEngineServer::PlaybackTempEntity"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CVEngineServer18PlaybackTempEntityER16IRecipientFilterfPKvPK9SendTablei"
				}
				"CTFMinigun::SharedAttack"
				{
					type "sym"
					sym  "_ZN10CTFMinigun12SharedAttackEv"
				}
				"CNetworkStringTableContainer::CreateStringTable"
				{
					lib "engine"
					type "sym"
					sym  "_ZN28CNetworkStringTableContainer17CreateStringTableEPKciii"
				}
				"CNetworkStringTable::DeleteAllStrings"
				{
					lib "engine"
					type "sym"
					sym  "_ZN19CNetworkStringTable16DeleteAllStringsEv"
				}
				"CNetworkStringTable::AddString"
				{
					lib "engine"
					type "sym"
					sym  "_ZN19CNetworkStringTable9AddStringEbPKciPKv"
				}
				"CParticleSystemMgr::UncacheAllParticleSystems"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr25UncacheAllParticleSystemsEv"
				}
				"ParseParticleEffects"
				{
					type "sym"
					sym  "_Z20ParseParticleEffectsbb"
				}
				"CParticleSystemMgr::GetParticleSystemCount"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr22GetParticleSystemCountEv"
				}
				"CParticleSystemMgr::CParticleSystemMgr"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgrC2Ev"
				}
				"CParticleSystemMgr::~CParticleSystemMgr"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgrD2Ev"
				}
				"CParticleSystemMgr::Init"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr4InitEP20IParticleSystemQuery"
				}
				"CTriggerIgnite::BurnEntities"
				{
					type "sym"
					sym  "_ZN14CTriggerIgnite12BurnEntitiesEv"
				}
				"CTriggerIgnite::IgniteEntity"
				{
					type "sym"
					sym  "_ZN14CTriggerIgnite12IgniteEntityEP11CBaseEntity"
				}
				"CBaseGrenade::GetThrower"
				{
					type "sym"
					sym  "_ZN12CBaseGrenade10GetThrowerEv"
				}
				"CEntityFactory<CGameText>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI9CGameTextE6CreateEPKc"
				}
				"CEntityFactory<CTrainingAnnotation>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI19CTrainingAnnotationE6CreateEPKc"
				}
				"CEntityFactory<CTriggerMultiple>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI16CTriggerMultipleE6CreateEPKc"
				}
				"CEntityFactory<CTriggerHurt>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI12CTriggerHurtE6CreateEPKc"
				}
				"CEntityFactory<CTFHudNotify>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI12CTFHudNotifyE6CreateEPKc"
				}
				"CEntityFactory<CRagdollMagnet>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI14CRagdollMagnetE6CreateEPKc"
				}
				"CEntityFactory<CEnvShake>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI9CEnvShakeE6CreateEPKc"
				}
				"CEntityFactory<CTeamplayRoundWin>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI17CTeamplayRoundWinE6CreateEPKc"
				}
				"CEntityFactory<CEnvViewPunch>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI13CEnvViewPunchE6CreateEPKc"
				}
				"CEntityFactory<CTFForceRespawn>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI15CTFForceRespawnE6CreateEPKc"
				}
				"CEntityFactory<CPointEntity>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI12CPointEntityE6CreateEPKc"
				}
				"CEntityFactory<CPointNavInterface>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI18CPointNavInterfaceE6CreateEPKc"
				}
				"CEntityFactory<CPointClientCommand>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI19CPointClientCommandE6CreateEPKc"
				}
				"CEntityFactory<CPointServerCommand>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI19CPointServerCommandE6CreateEPKc"
				}
				"CEntityFactory<CPointPopulatorInterface>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI24CPointPopulatorInterfaceE6CreateEPKc"
				}
				"CEntityFactory<CPointHurt>::Create"
				{
					type "sym"
					sym  "_ZN14CEntityFactoryI10CPointHurtE6CreateEPKc"
				}
				"CServerNetworkProperty::GetEdict"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty8GetEdictEv"
				}
				"CServerNetworkProperty::GetEntityHandle"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty15GetEntityHandleEv"
				}
				"CServerNetworkProperty::GetServerClass"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty14GetServerClassEv"
				}
				"CServerNetworkProperty::GetBaseEntity"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty13GetBaseEntityEv"
				}
				"CServerNetworkProperty::GetBaseNetworkable"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty18GetBaseNetworkableEv"
				}
				"CServerNetworkProperty::GetClassName"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty12GetClassNameEv"
				}
				"CServerNetworkProperty::GetPVSInfo"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty10GetPVSInfoEv"
				}
				"CServerNetworkProperty::AreaNum"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty7AreaNumEv"
				}
				
				"CCollisionProperty::GetEntityHandle"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty15GetEntityHandleEv"
				}
				"CCollisionProperty::GetSolid"
				{
					type "sym"
					sym  "_ZNK18CCollisionProperty8GetSolidEv"
				}
				"CCollisionProperty::GetSolidFlags"
				{
					type "sym"
					sym  "_ZNK18CCollisionProperty13GetSolidFlagsEv"
				}
				"CTFConditionList::_Add"
				{
					type "sym"
					sym  "_ZN16CTFConditionList4_AddE7ETFCondfP9CTFPlayerP11CBaseEntity"
				}
				"CTFConditionList::_Remove"
				{
					type "sym"
					sym  "_ZN16CTFConditionList7_RemoveE7ETFCondb"
				}
				"GEconItemSchema"
				{
					type "sym"
					sym  "_Z15GEconItemSchemav"
				}
				"GetFileWeaponInfoFromHandle"
				{
					type "sym"
					sym  "_Z27GetFileWeaponInfoFromHandlet"
				}
				"CStaticPropMgr::IsStaticProp"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr12IsStaticPropEP13IHandleEntity"
				}
				"INextBot::GetDebugIdentifier"
				{
					type "sym"
					sym  "_ZNK8INextBot18GetDebugIdentifierEv"
				}
				"CStaticProp::GetEntityHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CStaticProp15GetEntityHandleEv"
				}
				"CStaticProp::GetRefEHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK11CStaticProp13GetRefEHandleEv"
				}
				"CStaticPropMgr::GetStaticProp"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr13GetStaticPropEP13IHandleEntity"
				}
				"CStaticProp::Init"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CStaticProp4InitEiR16StaticPropLump_tP7model_t"
				}
				"CSpatialPartition::CreateHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZN17CSpatialPartition12CreateHandleEP13IHandleEntity"
				}
				"CStaticPropMgr::GetStaticPropIndex"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr18GetStaticPropIndexEP13IHandleEntity"
				}
				"CStaticPropMgr::LevelShutdown"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr13LevelShutdownEv"
				}
				"CStaticPropMgr::LevelInit"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr9LevelInitEv"
				}
				"UTIL_PlayerByIndex"
				{
					type "sym"
					sym  "_Z18UTIL_PlayerByIndexi"
				}
				"CModelInfoServer::RegisterDynamicModel"
				{
					lib "engine"
					type "sym"
					sym  "_ZN16CModelInfoServer20RegisterDynamicModelEPKcb"
				}
				"CMDLCache::BeginLock"
				{
					lib "datacache"
					type "sym"
					sym  "_ZN9CMDLCache9BeginLockEv"
				}
				"CMDLCache::EndLock"
				{
					lib "datacache"
					type "sym"
					sym  "_ZN9CMDLCache7EndLockEv"
				}
				"CModelLoader::FlushDynamicModels"
				{
					lib "engine"
					type "sym"
					sym  "_ZN12CModelLoader18FlushDynamicModelsEv"
				}
				"CThreadLocalBase::Get"
				{
					lib "tier0"
					type "sym"
					sym  "_ZNK16CThreadLocalBase3GetEv"
				}
				"CTakeDamageInfo::Init"
				{
					type "sym"
					sym  "_ZN15CTakeDamageInfo4InitEP11CBaseEntityS1_S1_RK6VectorS4_S4_fii"
				}
				"CBaseMultiplayerPlayer::ShouldRunRateLimitedCommand [str]"
				{
					type "sym"
					sym  "_ZN22CBaseMultiplayerPlayer27ShouldRunRateLimitedCommandEPKc"
				}
				"CEconEntity::ReapplyProvision"
				{
					type "sym"
					sym  "_ZN11CEconEntity16ReapplyProvisionEv"
				}
				"CAttributeManager::AddProvider"
				{
					type "sym"
					sym  "_ZN17CAttributeManager11AddProviderEP11CBaseEntity"
				}
				"CAttributeManager::RemoveProvider"
				{
					type "sym"
					sym  "_ZN17CAttributeManager14RemoveProviderEP11CBaseEntity"
				}
				"CAttributeManager::ApplyAttributeStringWrapper"
				{
					type "sym"
					sym  "_ZN17CAttributeManager27ApplyAttributeStringWrapperE8string_tP11CBaseEntityS0_P10CUtlVectorIS2_10CUtlMemoryIS2_iEE"
				}
				"CAttributeManager::ApplyAttributeString"
				{
					type "sym"
					sym  "_ZN17CAttributeManager20ApplyAttributeStringE8string_tP11CBaseEntityS0_P10CUtlVectorIS2_10CUtlMemoryIS2_iEE"
				}
				"CServerDatatableStack::RecurseAndCallProxies"
				{
					lib "engine"
					type "sym"
					sym  "_ZN21CServerDatatableStack21RecurseAndCallProxiesEP9CSendNodePh"
				}
				"CBaseAnimatingOverlay::FastRemoveLayer"
				{
					type "sym"
					sym  "_ZN21CBaseAnimatingOverlay15FastRemoveLayerEi"
				}
				"CBaseAnimatingOverlay::SetLayerCycle"
				{
					type "sym"
					sym  "_ZN21CBaseAnimatingOverlay13SetLayerCycleEif"
				}
				"CBaseFlex::ProcessSceneEvents"
				{
					type "sym"
					sym  "_ZN9CBaseFlex18ProcessSceneEventsEv"
				}
				"CTFGameRules::SetupOnRoundStart"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17SetupOnRoundStartEv"
				}
				"CSingleUserRecipientFilter::CSingleUserRecipientFilter"
				{
					type "sym"
					sym  "_ZN26CSingleUserRecipientFilterC2EPK11CBasePlayer"
				}
				"SendProxy_AngleToFloat"
				{
					lib "engine"
					type "sym"
					sym  "_Z22SendProxy_AngleToFloatPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_Empty"
				{
					lib "engine"
					type "sym"
					sym  "_ZL15SendProxy_EmptyPK8SendPropPKvS3_P8DVariantii"
				}
				"Script_StringToFile"
				{
					type "sym"
					sym  "_ZL19Script_StringToFilePKcS0_"
				}
				"CHLTVClient::SendSnapshot"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CHLTVClient12SendSnapshotEP12CClientFrame"
				}
				"CHLTVServer::BroadcastLocalChat"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CHLTVServer18BroadcastLocalChatEPKcS1_"
				}
				"CBaseClient::Disconnect"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient10DisconnectEPKcz"
				}
				"CBaseClient::ActivatePlayer"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient14ActivatePlayerEv"
				}
				"CBaseClient::OnSignonStateFull"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient17OnSignonStateFullEv"
				}
				"CTFProjectile_Flare::SendDeathNotice"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Flare15SendDeathNoticeEv"
				}
				"CTFGameRules::DeathNotice"
				{
					type "sym"
					sym  "_ZN12CTFGameRules11DeathNoticeEP11CBasePlayerRK15CTakeDamageInfoPKc"
				}
				"CTFProjectile_Arrow::CreateTrail"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow11CreateTrailEv"
				}
				"CTFProjectile_Arrow::BreakArrow"
				{
					type "sym"
					sym  "_ZN19CTFProjectile_Arrow10BreakArrowEv"
				}
				"CTriggerCatapult::OnLaunchedVictim"
				{
					type "sym"
					sym  "_ZN16CTriggerCatapult16OnLaunchedVictimEP11CBaseEntity"
				}
				"CSpellPickup::ItemCanBeTouchedByPlayer"
				{
					type "sym"
					sym  "_ZN12CSpellPickup24ItemCanBeTouchedByPlayerEP11CBasePlayer"
				}
				"CTFGrenadePipebombProjectile::OnTakeDamage"
				{
					type "sym"
					sym  "_ZN28CTFGrenadePipebombProjectile12OnTakeDamageERK15CTakeDamageInfo"
				}
				"CTriggerMoved::EnumElement"
				{
					lib "engine"
					type "sym"
					sym  "_ZN13CTriggerMoved11EnumElementEP13IHandleEntity"
				}
				"CStaticPropMgr::IsStaticProp (CBaseHandle)"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr12IsStaticPropE11CBaseHandle"
				}
				"CObjectDispenser::GetHealRate"
				{
					type "sym"
					sym  "_ZNK16CObjectDispenser11GetHealRateEv"
				}
				"CObjectDispenser::DispenseAmmo"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser12DispenseAmmoEP9CTFPlayer"
				}
				"CObjectTeleporter::TeleporterThink"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter15TeleporterThinkEv"
				}
				"CObjectSentrygun::StartUpgrading"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun14StartUpgradingEv"
				}
				"CObjectSentrygun::Spawn"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun5SpawnEv"
				}
				"CObjectTeleporter::TeleporterSend"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter14TeleporterSendEP9CTFPlayer"
				}
				"CObjectSentrygun::SentryRotate"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun12SentryRotateEv"
				}
				"CObjectSentrygun::SetModel"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun8SetModelEPKc"
				}
				"CObjectDispenser::SetModel"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser8SetModelEPKc"
				}
				"CObjectTeleporter::SetModel"
				{
					type "sym"
					sym  "_ZN17CObjectTeleporter8SetModelEPKc"
				}
				"CObjectSentrygun::FoundTarget"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun11FoundTargetEP11CBaseEntityRK6Vectorb"
				}
				"CObjectSentrygun::EmitSentrySound"
				{
					type "sym"
					sym  "_ZN16CObjectSentrygun15EmitSentrySoundEPKc"
				}
				"CPlayer::IsSourceTV"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK7CPlayer10IsSourceTVEv"
				}
				"CPlayer::GetIClient"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK7CPlayer10GetIClientEv"
				}
				"PlayerManager::OnClientPutInServer"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZN13PlayerManager19OnClientPutInServerEP7edict_tPKc"
				}
				"CPlayer::GetEdict"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZN7CPlayer8GetEdictEv"
				}
				"PlayerManager::GetPlayerByIndex"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK13PlayerManager16GetPlayerByIndexEi"
				}
				"CBaseViewModel::DestroyControlPanels"
				{
					type "sym"
					sym  "_ZN14CBaseViewModel20DestroyControlPanelsEv"
				}
				"CCaptureFlag::FlagTouch"
				{
					type "sym"
					sym  "_ZN12CCaptureFlag9FlagTouchEP11CBaseEntity"
				}
				"LookupWeaponInfoSlot"
				{
					type "sym"
					sym  "_Z20LookupWeaponInfoSlotPKc"
				}
				"CBaseMultiplayerPlayer::SpeakConceptIfAllowed"
				{
					type "sym"
					sym  "_ZN22CBaseMultiplayerPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
				}
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				
				
				"UTIL_GetCommandClient"              "_Z21UTIL_GetCommandClientv"
				"UTIL_GetCommandClientIndex"         "_Z26UTIL_GetCommandClientIndexv"
				"UTIL_IsCommandIssuedByServerAdmin"  "_Z33UTIL_IsCommandIssuedByServerAdminv"
				"UTIL_PrecacheOther"                 "_Z18UTIL_PrecacheOtherPKcS0_"
				"UTIL_Remove [IServerNetworkable *]" "_Z11UTIL_RemoveP18IServerNetworkable"
				"UTIL_Remove [CBaseEntity *]"        "_Z11UTIL_RemoveP11CBaseEntity"
				
				"CBaseEntity::ThinkSet" 				"_ZN11CBaseEntity8ThinkSetEMS_FvvEfPKc"
				"CBaseEntity::GetMaxHealth" "_ZNK11CBaseEntity12GetMaxHealthEv"
				"CBaseEntity::IsDeflectable" "_ZN11CBaseEntity13IsDeflectableEv"
				"CBaseEntity::IsAlive" "_ZN11CBaseEntity7IsAliveEv"
				"CBaseEntity::GetDefaultItemChargeMeterValue" "_ZNK11CBaseEntity30GetDefaultItemChargeMeterValueEv"
				"CBaseEntity::DispatchUpdateTransmitState" "_ZN11CBaseEntity27DispatchUpdateTransmitStateEv"
				"CBaseEntity::SetEffects" "_ZN11CBaseEntity10SetEffectsEi"
				"CBaseEntity::AddEffects" "_ZN11CBaseEntity10AddEffectsEi"
				"CBaseEntity::TakeDamage" "_ZN11CBaseEntity10TakeDamageERK15CTakeDamageInfo"
				"CBaseEntity::EyeAngles" "_ZN11CBaseEntity9EyeAnglesEv"
				"CBaseEntity::CalcAbsolutePosition" "_ZN11CBaseEntity20CalcAbsolutePositionEv"
				"CBaseEntity::EyePosition" "_ZN11CBaseEntity11EyePositionEv"
				"CBaseEntity::KeyValue" "_ZN11CBaseEntity8KeyValueEPKcS1_"
				"CBaseEntity::GetKeyValue" "_ZN11CBaseEntity11GetKeyValueEPKcPci"
				"CBaseEntity::SetOwnerEntity" "_ZN11CBaseEntity14SetOwnerEntityEPS_"
				"CBaseEntity::SetAbsOrigin" "_ZN11CBaseEntity12SetAbsOriginERK6Vector"
				"CBaseEntity::SetAbsAngles" "_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
				"CBaseEntity::SetAbsVelocity" "_ZN11CBaseEntity14SetAbsVelocityERK6Vector"
				"CBaseEntity::Spawn" "_ZN11CBaseEntity5SpawnEv"
				"CBaseEntity::Remove" "_ZN11CBaseEntity6RemoveEv"
				// const char *, float, float *
				"CBaseEntity::EmitSound [member: normal]" "_ZN11CBaseEntity9EmitSoundEPKcfPf"
				// const char *, HSOUNDSCRIPTHANDLE&, float, float *
				"CBaseEntity::EmitSound [member: normal + handle]" "_ZN11CBaseEntity9EmitSoundEPKcRsfPf"
				// IRecipientFilter&, int, const char *, const Vector *, float, float *
				"CBaseEntity::EmitSound [static: normal]" "_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriPKcPK6VectorfPf"
				// IRecipientFilter&, int, const char *, short&, const Vector *, float, float *
				"CBaseEntity::EmitSound [static: normal + handle]" "_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriPKcRsPK6VectorfPf"
				// IRecipientFilter&, int, const EmitSound_t&
				"CBaseEntity::EmitSound [static: emitsound]" "_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriRK11EmitSound_t"
				// IRecipientFilter&, int, const EmitSound_t&, short&
				"CBaseEntity::EmitSound [static: emitsound + handle]" "_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriRK11EmitSound_tRs"
				"CBaseEntity::PhysicsSimulate" "_ZN11CBaseEntity15PhysicsSimulateEv"
				"CBaseEntity::GetVelocity" "_ZN11CBaseEntity11GetVelocityEP6VectorS1_"
				"CBaseEntity::WorldSpaceCenter" "_ZNK11CBaseEntity16WorldSpaceCenterEv"
				"CBaseEntity::CreateNoSpawn" "_ZN11CBaseEntity13CreateNoSpawnEPKcRK6VectorRK6QAnglePS_"
				"CBaseEntity::Create" "_ZN11CBaseEntity6CreateEPKcRK6VectorRK6QAnglePS_"
				"CBaseEntity::GetNextThink" "_ZN11CBaseEntity12GetNextThinkEPKc"
				"CBaseEntity::IsCombatItem" "_ZNK11CBaseEntity12IsCombatItemEv"
				"CBaseEntity::GetModelIndex" "_ZNK11CBaseEntity13GetModelIndexEv"
				"CBaseEntity::MyCombatCharacterPointer" "_ZN11CBaseEntity24MyCombatCharacterPointerEv"
				"CBaseEntity::PhysicsNoclip" "_ZN11CBaseEntity13PhysicsNoclipEv"
				"CBaseEntity::PhysicsRunThink" "_ZN11CBaseEntity15PhysicsRunThinkENS_14thinkmethods_tE"
				"CBaseEntity::PhysicsRunSpecificThink" "_ZN11CBaseEntity23PhysicsRunSpecificThinkEiMS_FvvE"
				"CBaseEntity::PhysicsDispatchThink" "_ZN11CBaseEntity20PhysicsDispatchThinkEMS_FvvE"
				"CBaseEntity::IsBSPModel" "_ZNK11CBaseEntity10IsBSPModelEv"
				"CBaseEntity::ShouldCollide" "_ZNK11CBaseEntity13ShouldCollideEii"
				"CBaseEntity::DrawDebugGeometryOverlays" "_ZN11CBaseEntity25DrawDebugGeometryOverlaysEv"
				"CBaseEntity::ChangeTeam" "_ZN11CBaseEntity10ChangeTeamEi"
				"CBaseEntity::SetModelIndexOverride" "_ZN11CBaseEntity21SetModelIndexOverrideEii"
				"CBaseEntity::SetModelIndex" "_ZN11CBaseEntity13SetModelIndexEi"
				"CBaseEntity::GetModelName" "_ZNK11CBaseEntity12GetModelNameEv"
				"CBaseEntity::EntityText" "_ZN11CBaseEntity10EntityTextEiPKcfiiii"
				"CBaseEntity::AcceptInput" "_ZN11CBaseEntity11AcceptInputEPKcPS_S2_9variant_ti"
				"CBaseEntity::SetModel" "_ZN11CBaseEntity8SetModelEPKc"
				"CBaseEntity::PerformCustomPhysics" "_ZN11CBaseEntity20PerformCustomPhysicsEP6VectorS1_P6QAngleS3_"
				"CBaseEntity::SetMoveType" "_ZN11CBaseEntity11SetMoveTypeE10MoveType_t13MoveCollide_t"
				"CBaseEntity::CalcAbsoluteVelocity" "_ZN11CBaseEntity20CalcAbsoluteVelocityEv"
				"CBaseEntity::PrecacheScriptSound" "_ZN11CBaseEntity19PrecacheScriptSoundEPKc"
				"CBaseEntity::GetModel" "_ZN11CBaseEntity8GetModelEv"
				"CBaseEntity::PrecacheModel" "_ZN11CBaseEntity13PrecacheModelEPKcb"
				"CBaseEntity::PrecacheSound" "_ZN11CBaseEntity13PrecacheSoundEPKc"
				"CBaseEntity::NameMatchesComplex" "_ZN11CBaseEntity18NameMatchesComplexEPKc"
				"CBaseEntity::ClassMatchesComplex" "_ZN11CBaseEntity19ClassMatchesComplexEPKc"
				"CBaseEntity::ParseMapData" "_ZN11CBaseEntity12ParseMapDataEP14CEntityMapData"
				"CBaseEntity::Activate" "_ZN11CBaseEntity8ActivateEv"
				"CBaseEntity::GetDamage" "_ZN11CBaseEntity9GetDamageEv"
				"CBaseEntity::SetDamage" "_ZN11CBaseEntity9SetDamageEf"
				"CBaseEntity::FVisible [ent]" "_ZN11CBaseEntity8FVisibleEPS_iPS0_"
				"CBaseEntity::FVisible [vec]" "_ZN11CBaseEntity8FVisibleERK6VectoriPPS_"
				"CBaseEntity::Touch" "_ZN11CBaseEntity5TouchEPS_"
				"CBaseEntity::IsBaseCombatWeapon" "_ZNK11CBaseEntity18IsBaseCombatWeaponEv"
				"CBaseEntity::IsWearable" "_ZNK11CBaseEntity10IsWearableEv"
				"CBaseEntity::SetNextThink [index]" "_ZN11CBaseEntity12SetNextThinkEif"
				"CBaseEntity::SetNextThink [name]" "_ZN11CBaseEntity12SetNextThinkEfPKc"
				"CBaseEntity::DrawDebugTextOverlays" "_ZN11CBaseEntity21DrawDebugTextOverlaysEv"
				"CBaseEntity::MyNextBotPointer" "_ZN11CBaseEntity16MyNextBotPointerEv"
				"CBaseEntity::Teleport" "_ZN11CBaseEntity8TeleportEPK6VectorPK6QAngleS2_"
				"CBaseEntity::StopSound" "_ZN11CBaseEntity9StopSoundEPKc"
				"CBaseEntity::SetParent" "_ZN11CBaseEntity9SetParentEPS_i"
				"CBaseEntity::UpdateOnRemove" "_ZN11CBaseEntity14UpdateOnRemoveEv"
				"CBaseEntity::IsPlayer" "_ZNK11CBaseEntity8IsPlayerEv"
				"CBaseEntity::IsBaseObject" "_ZNK11CBaseEntity12IsBaseObjectEv"
				"CBaseEntity::GetTransmitState" "_ZN11CBaseEntity16GetTransmitStateEv"
				"CBaseEntity::MyCombatWeaponPointer" "_ZN11CBaseEntity21MyCombatWeaponPointerEv"
				"CBaseEntity::GetParametersForSound" "CBaseEntity::GetParametersForSound"
				"CBaseEntity::InSameTeam" "_ZNK11CBaseEntity10InSameTeamEPKS_"
				"CBaseEntity::ReadKeyField" "_ZN11CBaseEntity12ReadKeyFieldEPKcP9variant_t"
				"CBaseEntity::OnTakeDamage" "_ZN11CBaseEntity12OnTakeDamageERK15CTakeDamageInfo"
				"CBaseEntity::FireBullets" "_ZN11CBaseEntity11FireBulletsERK17FireBulletsInfo_t"
				"CBaseEntity::ModifyFireBulletsDamage" "_ZN11CBaseEntity23ModifyFireBulletsDamageEP15CTakeDamageInfo"
				"CBaseEntity::VPhysicsInitStatic" "_ZN11CBaseEntity18VPhysicsInitStaticEv"
				"CBaseEntity::GetTouchTrace" "_ZN11CBaseEntity13GetTouchTraceEv"
				"CBaseEntity::GetServerClass" "_ZN11CBaseEntity14GetServerClassEv"
				"CBaseEntity::CBaseEntity" "_ZN11CBaseEntityC2Eb"
				"CBaseEntity::GetBaseAnimating" "_ZN11CBaseEntity16GetBaseAnimatingEv" 
				"CBaseEntity::GetDataObject" "_ZN11CBaseEntity13GetDataObjectEi"
				"CBaseEntity::TakeHealth" "_ZN11CBaseEntity10TakeHealthEfi"
				"CBaseEntity::PassesDamageFilter" "_ZN11CBaseEntity18PassesDamageFilterERK15CTakeDamageInfo"
				"CBaseEntity::PhysicsSolidMaskForEntity" "_ZNK11CBaseEntity25PhysicsSolidMaskForEntityEv"
				"CBaseEntity::ShouldTransmit" "_ZN11CBaseEntity14ShouldTransmitEPK18CCheckTransmitInfo"
				"CBaseEntity::GetTeamNumber" "_ZNK11CBaseEntity13GetTeamNumberEv"
				"CBaseEntity::GetDamageType" "_ZNK11CBaseEntity13GetDamageTypeEv"
				"CBaseEntity::StartTouch" "_ZN11CBaseEntity10StartTouchEPS_"
				"CBaseEntity::EndTouch" "_ZN11CBaseEntity8EndTouchEPS_"
				"CBaseEntity::SetTransmitState" "_ZN11CBaseEntity16SetTransmitStateEi"
				"CBaseEntity::PostClientActive" "_ZN11CBaseEntity16PostClientActiveEv"
				"CBaseEntity::FireNamedOutput" "_ZN11CBaseEntity15FireNamedOutputEPKc9variant_tPS_S3_f"
				"CBaseEntity::Event_Killed" "_ZN11CBaseEntity12Event_KilledERK15CTakeDamageInfo"
				"CBaseEntity::VPhysicsDestroyObject" "_ZN11CBaseEntity21VPhysicsDestroyObjectEv"
				"CBaseEntity::TransformStepData_WorldToParent" "_ZN11CBaseEntity31TransformStepData_WorldToParentEPS_"
				"CBaseEntity::TransformStepData_ParentToParent" "_ZN11CBaseEntity32TransformStepData_ParentToParentEPS_S0_"
				"CBaseEntity::ApplyAbsVelocityImpulse" "_ZN11CBaseEntity23ApplyAbsVelocityImpulseERK6Vector"
				"CBaseEntity::SetLocalOrigin" "_ZN11CBaseEntity14SetLocalOriginERK6Vector"
				"CBaseEntity::SetLocalAngles" "_ZN11CBaseEntity14SetLocalAnglesERK6QAngle"
				"CBaseEntity::SetLocalVelocity" "_ZN11CBaseEntity16SetLocalVelocityERK6Vector"
				"CBaseEntity::GetBaseEntity" "_ZN11CBaseEntity13GetBaseEntityEv"
				"CBaseEntity::GetNetworkable" "_ZN11CBaseEntity14GetNetworkableEv"
				"CBaseEntity::GetCollideable" "_ZN11CBaseEntity14GetCollideableEv"
				"CBaseEntity::GetRefEHandle" "_ZNK11CBaseEntity13GetRefEHandleEv"
				"CBaseEntity::TraceAttack" "_ZN11CBaseEntity11TraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"

				"CBaseCombatCharacter::GetBossType" "_ZNK20CBaseCombatCharacter11GetBossTypeEv"
				
				"CBaseCombatCharacter::GetLastKnownArea" "_ZNK20CBaseCombatCharacter16GetLastKnownAreaEv" 
				"CBaseCombatCharacter::Weapon_GetSlot" "_ZNK20CBaseCombatCharacter14Weapon_GetSlotEi" 
				"CBaseCombatCharacter::Weapon_CanSwitchTo" "_ZN20CBaseCombatCharacter18Weapon_CanSwitchToEP17CBaseCombatWeapon" 
				"CBaseCombatCharacter::Weapon_Switch" "_ZN20CBaseCombatCharacter13Weapon_SwitchEP17CBaseCombatWeaponi" 
				"CBaseCombatCharacter::AddGlowEffect" "_ZN20CBaseCombatCharacter13AddGlowEffectEv" 
				"CBaseCombatCharacter::RemoveGlowEffect" "_ZN20CBaseCombatCharacter16RemoveGlowEffectEv" 
				"CBaseCombatCharacter::IsGlowEffectActive" "_ZN20CBaseCombatCharacter18IsGlowEffectActiveEv" 
				"CBaseCombatCharacter::IsAbleToSee [CBaseEntity *]" "_ZN20CBaseCombatCharacter11IsAbleToSeeEPK11CBaseEntityNS_20FieldOfViewCheckTypeE" 
				"CBaseCombatCharacter::IsAbleToSee [CBaseCombatCharacter *]" "_ZN20CBaseCombatCharacter11IsAbleToSeeEPS_NS_20FieldOfViewCheckTypeE" 
				"CBaseCombatCharacter::SetBloodColor" "_ZN20CBaseCombatCharacter13SetBloodColorEi" 
				"CBaseCombatCharacter::GiveAmmo" "_ZN20CBaseCombatCharacter8GiveAmmoEiib" 
				"CBaseCombatCharacter::GetAmmoCount" "_ZNK20CBaseCombatCharacter12GetAmmoCountEi" 
				"CBaseCombatCharacter::OnTakeDamage" "_ZN20CBaseCombatCharacter12OnTakeDamageERK15CTakeDamageInfo" 
				"CBaseCombatCharacter::UpdateLastKnownArea" "_ZN20CBaseCombatCharacter19UpdateLastKnownAreaEv" 
				"CBaseCombatCharacter::Weapon_Detach" "_ZN20CBaseCombatCharacter13Weapon_DetachEP17CBaseCombatWeapon" 
				"CBaseCombatCharacter::SwitchToNextBestWeapon" "_ZN20CBaseCombatCharacter22SwitchToNextBestWeaponEP17CBaseCombatWeapon" 
				"CBaseCombatCharacter::CalculatePhysicsStressDamage" "_ZN20CBaseCombatCharacter28CalculatePhysicsStressDamageEP23vphysics_objectstress_tP14IPhysicsObject" 
				"CBaseCombatCharacter::ClearLastKnownArea" "_ZN20CBaseCombatCharacter18ClearLastKnownAreaEv" 
				"CBaseCombatCharacter::Event_Killed" "_ZN20CBaseCombatCharacter12Event_KilledERK15CTakeDamageInfo" 
				"CBaseCombatCharacter::Weapon_Equip" "_ZN20CBaseCombatCharacter12Weapon_EquipEP17CBaseCombatWeapon" 
				"CBaseCombatCharacter::ShouldGib" "_ZN20CBaseCombatCharacter9ShouldGibERK15CTakeDamageInfo" 
				"CBaseCombatCharacter::FInViewCone" "_ZN20CBaseCombatCharacter11FInViewConeERK6Vector" 
				
				"CTFTeam::GetNumObjects" "_ZN7CTFTeam13GetNumObjectsEi"
				"CTFTeam::GetObject"     "_ZN7CTFTeam9GetObjectEi"
				
				"CTFTeamManager::GetTeam"     "_ZN14CTFTeamManager7GetTeamEi"
				"CTFTeamManager::IsValidTeam" "_ZN14CTFTeamManager11IsValidTeamEi"
				
				"CTeamplayRules::SetStalemate"   "_ZN14CTeamplayRules12SetStalemateEibb"
				"CTeamplayRules::SetWinningTeam" "_ZN14CTeamplayRules14SetWinningTeamEiibbbb"
				
				"CTFGameRules::CTFGameRules [C1]" "_ZN12CTFGameRulesC1Ev"
				"CTFGameRules::GetAssister" "_ZN12CTFGameRules11GetAssisterEP11CBasePlayerS1_P11CBaseEntity"
				

				"CBasePlayer::IsBot" "_ZNK11CBasePlayer5IsBotEv" 
				"CBasePlayer::CommitSuicide" "_ZN11CBasePlayer13CommitSuicideEbb" 
				"CBasePlayer::GetSteamID" "_ZN11CBasePlayer10GetSteamIDEP8CSteamID" 
				"CBasePlayer::Weapon_ShootPosition" "_ZN11CBasePlayer20Weapon_ShootPositionEv" 
				"CBasePlayer::PlayStepSound" "_ZN11CBasePlayer13PlayStepSoundER6VectorP13surfacedata_tfb" 
				"CBasePlayer::SetPlayerName" "_ZN11CBasePlayer13SetPlayerNameEPKc" 
				"CBasePlayer::GetPlayerMaxSpeed" "_ZN11CBasePlayer17GetPlayerMaxSpeedEv" 
				"CBasePlayer::GetViewModel" "_ZN11CBasePlayer12GetViewModelEib" 
				"CBasePlayer::DisableButtons" "_ZN11CBasePlayer14DisableButtonsEi" 
				"CBasePlayer::EnableButtons" "_ZN11CBasePlayer13EnableButtonsEi" 
				"CBasePlayer::ForceButtons" "_ZN11CBasePlayer12ForceButtonsEi" 
				"CBasePlayer::UnforceButtons" "_ZN11CBasePlayer14UnforceButtonsEi"
				"CBasePlayer::RemoveWearable" "_ZN11CBasePlayer14RemoveWearableEP13CEconWearable" 
				"CBasePlayer::SnapEyeAngles" "_ZN11CBasePlayer13SnapEyeAnglesERK6QAngle" 
				"CBasePlayer::ChangeTeam [int, bool, bool, bool]" "_ZN11CBasePlayer10ChangeTeamEibbb" 
				"CBasePlayer::IsFakeClient" "_ZNK11CBasePlayer12IsFakeClientEv" 
				"CBasePlayer::IsBotOfType" "_ZNK11CBasePlayer11IsBotOfTypeEi" 
				"CBasePlayer::PhysicsSimulate" "_ZN11CBasePlayer15PhysicsSimulateEv" 
				"CBasePlayer::FindUseEntity" "_ZN11CBasePlayer13FindUseEntityEv" 
				"CBasePlayer::GetInVehicle" "_ZN11CBasePlayer12GetInVehicleEP14IServerVehiclei" 
				"CBasePlayer::LeaveVehicle" "_ZN11CBasePlayer12LeaveVehicleERK6VectorRK6QAngle" 
				"CBasePlayer::EyeAngles" "_ZN11CBasePlayer9EyeAnglesEv" 
				"CBasePlayer::ItemPostFrame" "_ZN11CBasePlayer13ItemPostFrameEv" 
				"CBasePlayer::UpdatePlayerSound" "_ZN11CBasePlayer17UpdatePlayerSoundEv" 
				"CBasePlayer::PlayerRunCommand" "_ZN11CBasePlayer16PlayerRunCommandEP8CUserCmdP11IMoveHelper" 
				"CBasePlayer::Touch" "_ZN11CBasePlayer5TouchEP11CBaseEntity" 
				"CBasePlayer::ClientCommand" "_ZN11CBasePlayer13ClientCommandERK8CCommand" 
				"CBasePlayer::ForceRespawn" "_ZN11CBasePlayer12ForceRespawnEv" 
				"CBasePlayer::CreateViewModel" "_ZN11CBasePlayer15CreateViewModelEi" 
				"CBasePlayer::EquipWearable" "_ZN11CBasePlayer13EquipWearableEP13CEconWearable" 
				"CBasePlayer::Weapon_Equip" "_ZN9CTFPlayer12Weapon_EquipEP17CBaseCombatWeapon" 
				"CBasePlayer::ShowViewPortPanel" "_ZN11CBasePlayer17ShowViewPortPanelEPKcbP9KeyValues" 
				"CBasePlayer::IsPlayer" "_ZNK11CBasePlayer8IsPlayerEv"
				"CBasePlayer::SetModel" "_ZN11CBasePlayer8SetModelEPKc"
				"CBasePlayer::SetVCollisionState" "_ZN11CBasePlayer18SetVCollisionStateERK6VectorS2_i"
				
				"CEyeballBossIdle::OnStart" "_ZN16CEyeballBossIdle7OnStartEP12CEyeballBossP6ActionIS0_E
				"CEyeballBossIdle::OnStart" "_ZN16CEyeballBossIdle7OnStartEP12CEyeballBossP6ActionIS0_E"
				"CEyeballBossIdle::Update"  "_ZN16CEyeballBossIdle6UpdateEP12CEyeballBossf"

				"CEyeballBossDead::Update" "_ZN16CEyeballBossDead6UpdateEP12CEyeballBossf"

				"CZombie::Spawn"      "_ZN7CZombie5SpawnEv"
				"CZombie::SpawnAtPos" "_ZN7CZombie10SpawnAtPosERK6VectorfiP11CBaseEntityNS_14SkeletonType_tE"

				"IZombieAutoList::m_IZombieAutoListAutoList" "_ZN15IZombieAutoList25m_IZombieAutoListAutoListE"

				"CZombieBehavior::OnKilled" "_ZN15CZombieBehavior8OnKilledEP7CZombieRK15CTakeDamageInfo"

				"CTeamplayRoundBasedRules::SetTeamRespawnWaveTime" "_ZN24CTeamplayRoundBasedRules22SetTeamRespawnWaveTimeEif"

				"CAttributeList::GetAttributeByID"       "_ZNK14CAttributeList16GetAttributeByIDEi"
				"CAttributeList::GetAttributeByName"     "_ZNK14CAttributeList18GetAttributeByNameEPKc"
				"CAttributeList::IterateAttributes"      "_ZNK14CAttributeList17IterateAttributesEP26IEconItemAttributeIterator"
				"CAttributeList::AddAttribute"           "_ZN14CAttributeList12AddAttributeEP18CEconItemAttribute"
				"CAttributeList::RemoveAttribute"        "_ZN14CAttributeList15RemoveAttributeEPK28CEconItemAttributeDefinition"
				"CAttributeList::RemoveAttributeByIndex" "_ZN14CAttributeList22RemoveAttributeByIndexEi"
				"CAttributeList::DestroyAllAttributes"   "_ZN14CAttributeList20DestroyAllAttributesEv"
				
				"CEconWearable::RemoveFrom" "_ZN13CEconWearable10RemoveFromEP11CBaseEntity"
				"CEconWearable::UnEquip"    "_ZN13CEconWearable7UnEquipEP11CBasePlayer"
				
				"CPlayerInventory::DumpInventoryToConsole" "_ZN16CPlayerInventory22DumpInventoryToConsoleEb"
				"CPlayerInventory::GetMaxItemCount"        "_ZNK16CPlayerInventory15GetMaxItemCountEv"
				
				"CTFInventoryManager::GetInventoryForPlayer" "_ZN19CTFInventoryManager21GetInventoryForPlayerERK8CSteamID"
				
				"IHasGenericMeter::ShouldUpdateMeter"     "_ZNK16IHasGenericMeter17ShouldUpdateMeterEv"
				"IHasGenericMeter::GetMeterMultiplier"    "_ZNK16IHasGenericMeter18GetMeterMultiplierEv"
				"IHasGenericMeter::OnResourceMeterFilled" "_ZN16IHasGenericMeter21OnResourceMeterFilledEv"
				"IHasGenericMeter::GetChargeInterval"     "_ZNK16IHasGenericMeter17GetChargeIntervalEv"
				
				"GetLoadoutPositionName"   "_Z22GetLoadoutPositionName19loadout_positions_t"
				"GetLoadoutPositionByName" "_Z24GetLoadoutPositionByNamePKc"
				
				"InventoryManager"   "_Z16InventoryManagerv"
				"TFInventoryManager" "_Z18TFInventoryManagerv"
				
				"CBaseCombatWeapon::IsMeleeWeapon" "_ZNK17CBaseCombatWeapon13IsMeleeWeaponEv"
				"CBaseCombatWeapon::GetMaxClip1" "_ZNK17CBaseCombatWeapon11GetMaxClip1Ev"
				"CBaseCombatWeapon::GetMaxClip2" "_ZNK17CBaseCombatWeapon11GetMaxClip2Ev"
				"CBaseCombatWeapon::PrimaryAttack" "_ZN17CBaseCombatWeapon13PrimaryAttackEv"
				"CBaseCombatWeapon::SecondaryAttack" "_ZN17CBaseCombatWeapon15SecondaryAttackEv"
				"CBaseCombatWeapon::CanPerformSecondaryAttack" "_ZNK17CBaseCombatWeapon25CanPerformSecondaryAttackEv"
				"CBaseCombatWeapon::Equip" "_ZN17CBaseCombatWeapon5EquipEP20CBaseCombatCharacter"
				"CBaseCombatWeapon::Drop" "_ZN17CBaseCombatWeapon4DropERK6Vector"
				"CBaseCombatWeapon::HasAmmo" "_ZN17CBaseCombatWeapon7HasAmmoEv"
				"CBaseCombatWeapon::GetViewModel" "_ZNK17CBaseCombatWeapon12GetViewModelEi"
				"CBaseCombatWeapon::GetWorldModel" "_ZNK17CBaseCombatWeapon13GetWorldModelEv"
				"CBaseCombatWeapon::WeaponSound" "_ZN17CBaseCombatWeapon11WeaponSoundE13WeaponSound_tf"
				"CBaseCombatWeapon::GetShootSound" "_ZNK17CBaseCombatWeapon13GetShootSoundEi"
				"CBaseCombatWeapon::GetPrimaryAmmoType" "_ZNK17CBaseCombatWeapon18GetPrimaryAmmoTypeEv"
				"CBaseCombatWeapon::SetSubType" "_ZN17CBaseCombatWeapon10SetSubTypeEi"
				"CBaseCombatWeapon::ItemPostFrame" "_ZN17CBaseCombatWeapon13ItemPostFrameEv"
				"CBaseCombatWeapon::UpdateTransmitState" "_ZN17CBaseCombatWeapon19UpdateTransmitStateEv"
				"CBaseCombatWeapon::SetViewModelIndex" "_ZN17CBaseCombatWeapon17SetViewModelIndexEi"
				"CBaseCombatWeapon::SetOwner" "_ZN17CBaseCombatWeapon8SetOwnerEP20CBaseCombatCharacter"
				"CBaseCombatWeapon::CheckReload" "_ZN17CBaseCombatWeapon11CheckReloadEv"
				"CBaseCombatWeapon::GetWpnData" "_ZNK17CBaseCombatWeapon10GetWpnDataEv"
				"CBaseCombatWeapon::SetViewModel" "_ZN17CBaseCombatWeapon12SetViewModelEv"
				"CBaseCombatWeapon::SetWeaponVisible" "_ZN17CBaseCombatWeapon16SetWeaponVisibleEb"
				"CBaseCombatWeapon::SetCustomViewModel" "_ZN17CBaseCombatWeapon18SetCustomViewModelEPKc"

				"CTFWeaponBase::ShouldRemoveInvisibilityOnPrimaryAttack" "_ZNK13CTFWeaponBase39ShouldRemoveInvisibilityOnPrimaryAttackEv"
				"CTFWeaponBase::UpdateOnRemove"                          "_ZN13CTFWeaponBase14UpdateOnRemoveEv"
				"CTFWeaponBase::DeflectEntity" "_ZN13CTFWeaponBase13DeflectEntityEP11CBaseEntityP9CTFPlayerR6Vector"
				"CTFWeaponBase::PrimaryAttack" "_ZN13CTFWeaponBase13PrimaryAttackEv"
				"CTFWeaponBase::SecondaryAttack" "_ZN13CTFWeaponBase15SecondaryAttackEv"
				"CTFWeaponBase::CanFireCriticalShot" "_ZN13CTFWeaponBase19CanFireCriticalShotEbP11CBaseEntity"
				"CTFWeaponBase::GetShootSound" "_ZNK13CTFWeaponBase13GetShootSoundEi"
				"CTFWeaponBase::ApplyOnHitAttributes" "_ZN13CTFWeaponBase20ApplyOnHitAttributesEP11CBaseEntityP9CTFPlayerRK15CTakeDamageInfo"
				"CTFWeaponBase::GetViewModel" "_ZNK13CTFWeaponBase12GetViewModelEi"
				"CTFWeaponBase::IsSilentKiller" "_ZN13CTFWeaponBase14IsSilentKillerEv"
				"CTFWeaponBase::CanPerformSecondaryAttack" "_ZNK13CTFWeaponBase25CanPerformSecondaryAttackEv"
				"CTFWeaponBase::ItemPostFrame" "_ZN13CTFWeaponBase13ItemPostFrameEv"
				"CTFWeaponBase::ItemBusyFrame" "_ZN13CTFWeaponBase13ItemBusyFrameEv"
				"CTFWeaponBase::GetProjectileFireSetup" "_ZN13CTFWeaponBase22GetProjectileFireSetupEP9CTFPlayer6VectorPS2_P6QAnglebf"
				"CTFWeaponBase::CalcIsAttackCritical" "_ZN13CTFWeaponBase20CalcIsAttackCriticalEv"
				"CTFWeaponBase::GetDamageType" "_ZNK13CTFWeaponBase13GetDamageTypeEv"
				"CTFWeaponBase::Deploy" "_ZN13CTFWeaponBase6DeployEv"
				"CTFWeaponBase::Holster" "_ZN13CTFWeaponBase7HolsterEP17CBaseCombatWeapon"
				"CTFWeaponBase::GetTFPlayerOwner" "_ZNK13CTFWeaponBase16GetTFPlayerOwnerEv"
				"CTFWeaponBase::GetPenetrateType" "_ZNK13CTFWeaponBase16GetPenetrateTypeEv"
				"CTFWeaponBase::Reload" "_ZN13CTFWeaponBase6ReloadEv"
				"CTFWeaponBase::GetSpreadAngles" "_ZN13CTFWeaponBase15GetSpreadAnglesEv"
				"CTFWeaponBase::Equip" "_ZN13CTFWeaponBase5EquipEP20CBaseCombatCharacter"
				"CTFWeaponBase::UpdateHands" "_ZN13CTFWeaponBase11UpdateHandsEv"
				"CTFWeaponBase::Energy_GetMaxEnergy" "_ZNK13CTFWeaponBase19Energy_GetMaxEnergyEv"
				"CTFWeaponBase::Energy_Recharge" "_ZN13CTFWeaponBase15Energy_RechargeEv"
				"CTFWeaponBase::IsEnergyWeapon" "_ZNK13CTFWeaponBase14IsEnergyWeaponEv"
				"CTFWeaponBase::Energy_GetShotCost" "_ZNK13CTFWeaponBase18Energy_GetShotCostEv"
				"CTFWeaponBase::ApplyFireDelay" "_ZNK13CTFWeaponBase14ApplyFireDelayEf"
				"CTFWeaponBase::Misfire" "_ZN13CTFWeaponBase7MisfireEv"
				"CTFWeaponBase::CheckReloadMisfire" "_ZN13CTFWeaponBase18CheckReloadMisfireEv"
				"CTFWeaponBase::GetParticleColor" "_ZN13CTFWeaponBase16GetParticleColorEi"
				"CTFWeaponBase::GetTFWpnData" "_ZNK13CTFWeaponBase12GetTFWpnDataEv"
				"CTFWeaponBase::StartEffectBarRegen" "_ZN13CTFWeaponBase19StartEffectBarRegenEv"
				"CTFWeaponBase::ItemHolsterFrame" "_ZN13CTFWeaponBase16ItemHolsterFrameEv"
				"CTFWeaponBase::GetInitialAfterburnDuration" "_ZNK13CTFWeaponBase27GetInitialAfterburnDurationEv"
				"CTFWeaponBase::GetAfterburnRateOnHit" "_ZNK13CTFWeaponBase21GetAfterburnRateOnHitEv"
				"CTFWeaponBase::IsPassiveWeapon" "_ZNK13CTFWeaponBase15IsPassiveWeaponEv"
				"CTFWeaponBase::AutoFiresFullClip" "_ZNK13CTFWeaponBase17AutoFiresFullClipEv"
				"CTFWeaponBase::SendWeaponAnim" "_ZN13CTFWeaponBase14SendWeaponAnimEi"
				"CTFWeaponBase::GetMaxHealthMod" "_ZN13CTFWeaponBase15GetMaxHealthModEv"
				"CTFWeaponBase::InternalGetEffectBarRechargeTime" "_ZN13CTFWeaponBase32InternalGetEffectBarRechargeTimeEv"
				"CTFWeaponBase::GetEffectBarProgress" "_ZN13CTFWeaponBase20GetEffectBarProgressEv"
				"CTFWeaponBase::GetActivityWeaponRole" "_ZNK13CTFWeaponBase21GetActivityWeaponRoleEv"

				"CTFWeaponBaseGun::DoFireEffects"        "_ZN16CTFWeaponBaseGun13DoFireEffectsEv"
				"CTFWeaponBaseGun::FireProjectile"       "_ZN16CTFWeaponBaseGun14FireProjectileEP9CTFPlayer"
				"CTFWeaponBaseGun::RemoveProjectileAmmo" "_ZN16CTFWeaponBaseGun20RemoveProjectileAmmoEP9CTFPlayer"
				"CTFWeaponBaseGun::ShouldPlayFireAnim"   "_ZN16CTFWeaponBaseGun18ShouldPlayFireAnimEv"
				"CTFWeaponBaseGun::UpdatePunchAngles"    "_ZN16CTFWeaponBaseGun17UpdatePunchAnglesEP9CTFPlayer"
				"CTFWeaponBaseGun::FireRocket" "_ZN16CTFWeaponBaseGun10FireRocketEP9CTFPlayeri"
				"CTFWeaponBaseGun::FireFlameRocket" "_ZN16CTFWeaponBaseGun15FireFlameRocketEP9CTFPlayer"
				"CTFWeaponBaseGun::FireArrow" "_ZN16CTFWeaponBaseGun9FireArrowEP9CTFPlayer16ProjectileType_t"
				"CTFWeaponBaseGun::FireFlare" "_ZN16CTFWeaponBaseGun9FireFlareEP9CTFPlayer"
				"CTFWeaponBaseGun::FireJar" "_ZN16CTFWeaponBaseGun7FireJarEP9CTFPlayer"
				"CTFWeaponBaseGun::FireNail" "_ZN16CTFWeaponBaseGun8FireNailEP9CTFPlayeri"
				"CTFWeaponBaseGun::FirePipeBomb" "_ZN16CTFWeaponBaseGun12FirePipeBombEP9CTFPlayeri"
				"CTFWeaponBaseGun::GetProjectileDamage" "_ZN16CTFWeaponBaseGun19GetProjectileDamageEv"
				"CTFWeaponBaseGun::GetCustomProjectileModel" "_ZN16CTFWeaponBaseGun24GetCustomProjectileModelEP17CAttribute_String"
				"CTFWeaponBaseGun::GetProjectileSpeed" "_ZN16CTFWeaponBaseGun18GetProjectileSpeedEv"
				"CTFWeaponBaseGun::GetProjectileGravity" "_ZN16CTFWeaponBaseGun20GetProjectileGravityEv"
				"CTFWeaponBaseGun::GetWeaponProjectileType" "_ZNK16CTFWeaponBaseGun23GetWeaponProjectileTypeEv"
				"CTFWeaponBaseGun::ModifyProjectile" "_ZN16CTFWeaponBaseGun16ModifyProjectileEP11CBaseEntity"
				"CTFWeaponBaseGun::FireEnergyBall" "_ZN16CTFWeaponBaseGun14FireEnergyBallEP9CTFPlayerb"
				"CTFWeaponBaseGun::PrimaryAttack" "_ZN16CTFWeaponBaseGun13PrimaryAttackEv"
				"CTFWeaponBaseGun::ZoomIn" "_ZN16CTFWeaponBaseGun6ZoomInEv"
				
				"CFlagDetectionZone::EntityIsFlagCarrier" "_ZN18CFlagDetectionZone19EntityIsFlagCarrierEP11CBaseEntity"
				
				"CBaseProjectile::CanCollideWithTeammates" "_ZNK15CBaseProjectile23CanCollideWithTeammatesEv"

				"CBaseObject::FindBuildPointOnPlayer" "_ZN11CBaseObject22FindBuildPointOnPlayerEP9CTFPlayerP11CBasePlayerRfR6Vector"
				"CBaseObject::AttachObjectToObject" "_ZN11CBaseObject20AttachObjectToObjectEP11CBaseEntityiR6Vector"

				"CObjectSapper::GetSapperModelName" "_ZN13CObjectSapper18GetSapperModelNameE13SapperModel_tPKc"
				"CObjectSapper::GetSapperSoundName" "_ZN13CObjectSapper18GetSapperSoundNameEv"
				"CObjectSapper::UpdateOnRemove" "_ZN13CObjectSapper14UpdateOnRemoveEv"

				"CTFBaseRocket::GetWeaponID" "_ZNK13CTFBaseRocket11GetWeaponIDEv"

				"CTFProjectile_Arrow::GetWeaponID" "_ZNK19CTFProjectile_Arrow11GetWeaponIDEv"

				"CTFProjectile_Cleaver::GetDamage" "_ZN21CTFProjectile_Cleaver9GetDamageEv"

				"CTFProjectile_ThrowableBreadMonster::GetDamage" "_ZN35CTFProjectile_ThrowableBreadMonster9GetDamageEv"

				"CTFProjectile_ThrowableRepel::GetDamage" "_ZN28CTFProjectile_ThrowableRepel9GetDamageEv"

				"CTFProjectile_ThrowableBrick::GetDamage" "_ZN28CTFProjectile_ThrowableBrick9GetDamageEv"

				"CTFStunBall::GetDamage" "_ZN11CTFStunBall9GetDamageEv"

				"CGameMovement::FullNoClipMove" "_ZN13CGameMovement14FullNoClipMoveEff"

				"CTFCompoundBow::Reload" "_ZN14CTFCompoundBow6ReloadEv"

				"CTFPipebombLauncher::Deploy" "_ZN19CTFPipebombLauncher6DeployEv"
				"CTFPipebombLauncher::FireProjectile" "_ZN19CTFPipebombLauncher14FireProjectileEP9CTFPlayer"

				"CLagCompensationManager::BacktrackPlayer" "_ZN23CLagCompensationManager15BacktrackPlayerEP11CBasePlayerf"
				
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "engine"
				}
				
				"Int_CompareDeltas"	"_Z17Int_CompareDeltasPK8SendPropP7bf_readS3_"
				"Float_CompareDeltas"	"_Z19Float_CompareDeltasPK8SendPropP7bf_readS3_"
				"VectorXY_CompareDeltas"	"_Z22VectorXY_CompareDeltasPK8SendPropP7bf_readS3_"
				"Array_CompareDeltas"	"_Z19Array_CompareDeltasPK8SendPropP7bf_readS3_"
				"Vector_CompareDeltas"	"_Z20Vector_CompareDeltasPK8SendPropP7bf_readS3_"
				"String_CompareDeltas"	"_Z20String_CompareDeltasPK8SendPropP7bf_readS3_"
				"Int64_CompareDeltas"	"_Z19Int64_CompareDeltasPK8SendPropP7bf_readS3_"

				"CBaseClient::SetName"	"_ZN11CBaseClient7SetNameEPKc"
				
			}
		}
	}
	"#default"
	{
		"#supported"
		{
			engine "css"
			engine "ep1"
			engine "ep2"
			engine "hl2dm"
			engine "dods"
			engine "sdk2013"
			engine "l4d"
			engine "nd"
			engine "l4d2"
			engine "blade"
			engine "insurgency"
			engine "contagion"
			engine "bms"
			engine "doi"
			engine "pkvii"
		}
		"sigsegv"
		{
			"addrs"
			{
				"CGlobalEntityList::FindEntityByClassname"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKc"
				}
				"CTeamplayRoundBasedRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules14BroadcastSoundEiPKci"
				}
				"CBaseProjectile::IsDestroyable"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile13IsDestroyableEv"
				}
				"CCSBot::IsVisible"
				{
					type "sym"
					sym  "_ZNK6CCSBot9IsVisibleEP9CCSPlayerbPh"
				}
				"CCSBot::GetPartPosition"
				{
					type "sym"
					sym  "_ZNK6CCSBot15GetPartPositionEP9CCSPlayerNS_15VisiblePartTypeE"
				}
				"CCSBot::FindMostDangerousThreat"
				{
					type "sym"
					sym  "_ZN6CCSBot23FindMostDangerousThreatEv"
				}
				
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				"CTeam::GetName"       "_ZN5CTeam7GetNameEv"
				"CTeam::GetNumPlayers" "_ZN5CTeam13GetNumPlayersEv"
				"CTeam::GetPlayer"     "_ZN5CTeam9GetPlayerEi"
				"CTeam::GetTeamNumber" "_ZNK5CTeam13GetTeamNumberEv"
			}
			
		}
	}
	"#default"
	{
		"#supported"
		{
			engine "tf2"
		}
		"sigsegv"
		{
			
			"addrs"
			{
				"CGlobalEntityList::FindEntityByClassname"
				{
					type "pattern"
					sym  "_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKcP17IEntityFindFilter"
					seg  "text"
					seek "558bec5356578bf98b4d0885c974158b01ff50088b3081e6ff0f00004603f68b34f7eb068bb70400010085f674318b5d0c8b3e85ff75106880a47010ff1574f26a1083c404eb11395f5c741c538bcfe8ac9ffaff84c075108b760c85f675d25f5e33c05b5dc208008bc75f5e5b5dc20800"
					mask "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffff00000000ffff00000000ffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				"CTeamplayRoundBasedRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules14BroadcastSoundEiPKciP11CBasePlayer"
				}
				"CBaseProjectile::IsDestroyable"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile13IsDestroyableEb"
				}
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				"CTeam::GetName"       "_ZNK5CTeam7GetNameEv"
				"CTeam::GetNumPlayers" "_ZNK5CTeam13GetNumPlayersEv"
				"CTeam::GetPlayer"     "_ZNK5CTeam9GetPlayerEi"
				"CTeam::GetTeamNumber" "_ZNK5CTeam13GetTeamNumberEv"
			}
		}
	}

}
